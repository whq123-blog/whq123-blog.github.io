<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Blessing</title>
    <url>/2021/06/24/Blessing/</url>
    <content><![CDATA[<p><span style=" font-family:"微软雅黑";font-weight:bold;"> 朝夕相处一年半，实验室入门培训，共事，一起快乐那些的场景分外清晰…</span></p>
<p><span style=" font-family:"微软雅黑";font-weight:bold;"> 虽有不舍吧，更多还是祝福和羡慕</span></p>
<p><span style=" font-family:"微软雅黑";font-weight:bold;"> cd学长说过，想想后面的美好生活，现在就不觉得苦了，就更坚定了。</span></p>
<p><span style=" font-family:"微软雅黑";font-weight:bold;"> 祝愿 cd学长，ln学长，lx学姐，前程似锦！</span></p>
]]></content>
      <categories>
        <category>杂记</category>
      </categories>
      <tags>
        <tag>blessing</tag>
      </tags>
  </entry>
  <entry>
    <title>DBTrainingRecord</title>
    <url>/2021/05/31/DBTrainingRecord/</url>
    <content><![CDATA[<h3 id="linux命令的补充"><a href="#linux命令的补充" class="headerlink" title="linux命令的补充"></a>linux命令的补充</h3><hr>
<h3 id="（1）查找find"><a href="#（1）查找find" class="headerlink" title="（1）查找find"></a>（1）查找<code>find</code></h3><p><code>find -name &#39;hadoop&#39;</code>: 当前目录下，查找 名为<code>hadoop</code> 的文件/目录</p>
<p><code>find -iname &#39;hadoop&#39;</code>: 当前目录下，查找 名为<code>hadoop</code>的文件/目录 ，不分大小写</p>
<p><code>find /root -name &#39;hadoop&#39;</code>: 在``/root<code>目录下，查找后缀为</code>.o`的文件</p>
<p><code>find  -name &#39;*.o&#39;</code>: 当前目录下，查找后缀为<code>.o</code>的文件</p>
<p><code>find  -iname &#39;*ha*&#39;</code>: 在规定 root 下查找名 包含<code>ha</code>的文件/目录</p>
<h3 id="（2）管道"><a href="#（2）管道" class="headerlink" title="（2）管道|"></a>（2）管道<code>|</code></h3><p><code>/usr/root |grep hadoop</code>:|左边的输出成为右边的输入</p>
<p><font color="red">用到再说…</font></p>
<h3 id="（3）软连接-gt-符号"><a href="#（3）软连接-gt-符号" class="headerlink" title="（3）软连接 -&gt;符号"></a>（3）软连接 <code>-&gt;</code>符号</h3><p>执行<code>ll -n </code>就可以看到<code>lrwxrwxrwx 1 root root   13 5月  31 11:32 tio.o -&gt; /root/1/tio.o</code>后者就是前者的快捷方式</p>
<p><font color="grey"> 软连接，带着<code>-s</code></font></p>
<div style="background-color:#1E90FF;"><font color="white">不必重复的占用磁盘空间，文件保持同步</font></div>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ln -s /root/1/tio.o  /root/tio.o</span><br></pre></td></tr></table></figure>

<p><font color="grey">硬链接,不带<code>-s</code></font></p>
<div style="background-color:#1E90FF;"><font color="white">占用磁盘空间，文件保持同步</font></div>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ln  /root/1/tio.o  /root/tio.o</span><br></pre></td></tr></table></figure>



<h3 id="（4）列举ls"><a href="#（4）列举ls" class="headerlink" title="（4）列举ls"></a>（4）列举<code>ls</code></h3><p><code>ll -a</code>:显示隐藏文件</p>
<p><code>ll -h</code> <code>ll -n</code>：显示更多属性（大小）</p>
<h3 id="（5）Vim"><a href="#（5）Vim" class="headerlink" title="（5）Vim"></a>（5）Vim</h3><p><code>:%s/java/JAVA/g</code>:<code>%s</code>:全文件开始查找和替换，将<code>java</code>全部替换为<code>JAVA</code>，<code>g</code>：global 全局替换</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">特别的，</span><br><span class="line">$&#123;system:Java.io.tmpdir&#125; 替换为 &#x2F;usr&#x2F;local&#x2F;hive&#x2F;iotmp</span><br><span class="line">:%s#$&#123;system:Java.io.tmpdir&#125;#&#x2F;usr&#x2F;local&#x2F;hive&#x2F;iotmp#g</span><br><span class="line">用#分隔</span><br></pre></td></tr></table></figure>

<p>输入g，直接到底部</p>
<h3 id="（6）权限"><a href="#（6）权限" class="headerlink" title="（6）权限"></a>（6）权限</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">r</span><br><span class="line">w</span><br><span class="line">x：执行权限</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="（7）服务启停"><a href="#（7）服务启停" class="headerlink" title="（7）服务启停"></a>（7）服务启停</h3><p><code>systemctl status httpd </code>：查看<code>httpd</code>状态</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl -[start|stop|status|enable|disable|] servername</span><br><span class="line"></span><br><span class="line">enable &#x3D;&gt; 开机默认开启</span><br><span class="line">disable &#x3D;&gt;开机不自启</span><br><span class="line">status &#x3D;&gt;    可以看到</span><br><span class="line"></span><br><span class="line"> Loaded: loaded (&#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;httpd.service; disabled不自启; vendor preset: disabled)</span><br><span class="line">   Active: inactive (dead)   #当前是关闭状态</span><br><span class="line">     Docs: man:httpd(8)</span><br><span class="line">           man:apachectl(8)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="（8）解压"><a href="#（8）解压" class="headerlink" title="（8）解压"></a>（8）解压</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tar -xzvf xxx</span><br><span class="line">tar -xzvf xxx -C /usr/local       解压到指定路径         习惯上，/usr/local  /usr/opt</span><br></pre></td></tr></table></figure>



<h3 id="（9）shell编程"><a href="#（9）shell编程" class="headerlink" title="（9）shell编程"></a>（9）shell编程</h3><p><code>!#/bin/bash</code>:开头加上，这个注释有啥用，增加可读性？</p>
<p>应用：多台机器一键安装，</p>
<p><a href="https://www.runoob.com/linux/linux-shell-basic-operators.html">菜鸟</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">变量：</span><br><span class="line">常亮：</span><br><span class="line">循环：</span><br><span class="line">流程控制语句：</span><br><span class="line">流程控制，使用关系运算符 -</span><br><span class="line">lt  小于 </span><br><span class="line">-gt  大于</span><br><span class="line">-eq  等于</span><br><span class="line">-o  或</span><br><span class="line">-a  且</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">touch dd.txt   #创建文件</span><br><span class="line">bash demo2.sh  #调用另一个脚本</span><br><span class="line">echo &quot;小丛丛 是猪&quot;| cat &gt;&gt; dd.txt   #输出并管道进文件中</span><br><span class="line">read -p &quot;请输入一个数字:&quot; SCORE    #输入</span><br><span class="line">if [ $SCORE -lt 10 -o $SCORE -gt 100 ];then #[] 前后必须有空格隔开  &lt;10 ||&gt;100</span><br><span class="line">	echo &quot;$SCORE小于10 或者大于100&quot;</span><br><span class="line"></span><br><span class="line">fi                                         #if then ....elif... if收尾</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">一个安装例子：</span><br><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">source ..&#x2F;........</span><br><span class="line">$PATH&#x3D;</span><br><span class="line"></span><br><span class="line">source ..&#x2F;.......</span><br><span class="line">$PATH&#x3D;</span><br></pre></td></tr></table></figure>



<h3 id="（10）系统配置文件"><a href="#（10）系统配置文件" class="headerlink" title="（10）系统配置文件"></a>（10）系统配置文件</h3><p>目录：<code>/etc/hosts</code></p>
<p>环境变量：<code>/etc/profile</code></p>
<p><code>source profile</code></p>
<h3 id="（11）内网穿透"><a href="#（11）内网穿透" class="headerlink" title="（11）内网穿透"></a>（11）内网穿透</h3><p>将自己的网段和端口暴露到公网</p>
<h3 id="（12）监听"><a href="#（12）监听" class="headerlink" title="（12）监听"></a>（12）监听</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">netstat -antp |grep 8802</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">netstat -antp |grep nginx</span><br></pre></td></tr></table></figure>

<h3 id="curl"><a href="#curl" class="headerlink" title="curl"></a>curl</h3><p>http命令，</p>
<ul>
<li>可以下载文件，</li>
<li>像浏览器一样，可以测试</li>
</ul>
<p>爬下来文本</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl https://www.baidu.com/</span><br></pre></td></tr></table></figure>





<p>欠账：</p>
<p>flume的采集操作没有做，</p>
<p>sqoop的传输操作没有做</p>
<p>脚本采集与监控</p>
<p>（行为日志采集、新闻采集）</p>
<p>temp:</p>
<p>1、tar安装hadoop、java：</p>
<p>​    放java   改名为jdk</p>
<p>​    hadoop 改名为hadoop</p>
<p>2、环境变量</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">Java</span></span><br><span class="line">export JAVA_HOME=/usr/local/jdk</span><br><span class="line">export PATH=$PATH:$JAVA_HOME/bin</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">hadoop</span></span><br><span class="line">export HADOOP_HOME=/usr/local/hadoop</span><br><span class="line">export PATH=$PATH:$HADOOP_HOME/bin:$HADOOP_HOME/sbin</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p>hadoop数据操作</p>
<p>（1）上传，<code>hdfs dfs -put  xxxx /</code>上传xxx到hdfs的根路径下</p>
<p>（2）列举，<code>hdfs dfs -ls /</code>列举根路径文件</p>
<p>3、配置hadoop</p>
<p>​     df port8020</p>
<p>4、集群格式化（bug）<code>exiting with  stauts 0</code></p>
<p>但凡格式化，就说明数据全不要了，会生成新的集群id和新块池，和原来的其他节点无法关联。</p>
<p>解决：每一台节点的<code>/usr/local/hadoop/</code>删除<code>tmp</code>,再启动集群</p>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>数据库实训</tag>
      </tags>
  </entry>
  <entry>
    <title>FAQ</title>
    <url>/2021/04/13/FAQ/</url>
    <content><![CDATA[<h3 id="初步阶段可能遇到的问题："><a href="#初步阶段可能遇到的问题：" class="headerlink" title="初步阶段可能遇到的问题："></a>初步阶段可能遇到的问题：</h3><ul>
<li>cannot GET categories / cannot GET tags</li>
</ul>
<p><a href="https://blog.csdn.net/Winter_chen001/article/details/79719154">https://blog.csdn.net/Winter_chen001/article/details/79719154</a></p>
<ul>
<li>如何使用无后台评论API–Valine</li>
</ul>
<p> <a href="https://www.cnblogs.com/Timesi/p/9556236.html">Leancloud+Valine打造Hexo个人博客极简评论系统</a></p>
<p> <a href="https://zhuanlan.zhihu.com/p/158120667">LeanCloud-Valine保姆级配置教程</a></p>
<span id="more"></span>

<ul>
<li>寻找合适的【Hexo主题】框架</li>
</ul>
<p><a href="https://hexo.io/themes/">https://hexo.io/themes/</a></p>
<ul>
<li> 8个顶级图标网站【favicon.ico】</li>
</ul>
<p><a href="https://www.jianshu.com/p/b06ddcdb2de8">https://www.jianshu.com/p/b06ddcdb2de8</a></p>
<p>推送到github总是443</p>
<p><font color="grey">方法一：更换网络或使用国外节点</font></p>
<p><font color="grey">方法二：根目录配置文件_config.yml的deploy这部分，仓库地址repository原来是写了https开头，改成如下即可：</font></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">#  repo: https://github.com/youname/youname.github.io.git</span><br><span class="line">  repo: git@github.com:youname/youname.github.io.git</span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure>

<p><font color="grey">方法三：开手机热点，贼好用（贼都说好用了，推荐）</font></p>
<ul>
<li>md文档上传并附带照片</li>
</ul>
<p><a href="https://www.jianshu.com/p/f72aaad7b852">https://www.jianshu.com/p/f72aaad7b852</a></p>
<ul>
<li>md文档RGB查询</li>
</ul>
<p><a href="https://bj.96weixin.com/tools/rgb">https://bj.96weixin.com/tools/rgb</a></p>
<ul>
<li> Hexo（CSS样式自定义）</li>
</ul>
<p><a href="https://www.pianshen.com/article/4686790693/">https://www.pianshen.com/article/4686790693/</a></p>
<ul>
<li>嵌入视频</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">height</span>=<span class="string">450</span> <span class="attr">width</span>=<span class="string">800</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span> <span class="attr">scrolling</span>=<span class="string">&quot;no&quot;</span> <span class="attr">border</span>=<span class="string">&quot;0&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;no&quot;</span> <span class="attr">framespacing</span>=<span class="string">&quot;0&quot;</span> <span class="attr">allowfullscreen</span>=<span class="string">&quot;true&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">iframe</span>&gt;</span>  </span><br><span class="line"><span class="comment">&lt;!-- height=450 width=800 可能是最合适的 ，md上的效果与实际html效果有出入，需要调试。</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>说明类文档</category>
      </categories>
      <tags>
        <tag>FAQ</tag>
      </tags>
  </entry>
  <entry>
    <title>Disaster</title>
    <url>/2021/05/21/Disaster/</url>
    <content><![CDATA[<p>1、手机</p>
<p>2、熬夜</p>
<p>3、状态</p>
<p>4、压力调节</p>
<p>5、体态</p>
<p>6、计划执行效率低下</p>
<p>7、运动 - -</p>
<p>8、学习积极性 - -</p>
<p>9、英语训练 - -</p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>warning</tag>
        <tag>Miscellaneous notes</tag>
      </tags>
  </entry>
  <entry>
    <title>FourSeasonsInShanLi</title>
    <url>/2021/05/27/FourSeasonsInShanLi/</url>
    <content><![CDATA[<div style="background-color:#CCCCFF ;color:white;"><center><font size="20px">春</font></center></div>

<p><img src="https://cdn.jsdelivr.net/gh/whq123-blog/cdn/spring/1-1.jpg"></p>
<div style="background-color:#228B22 ;color:white;"><center><font size="20px">夏</font></center></div>

<p><img src="https://cdn.jsdelivr.net/gh/whq123-blog/cdn/summer/2-1.jpg"></p>
<p><img src="https://cdn.jsdelivr.net/gh/whq123-blog/cdn/summer/2-2.jpg"></p>
<p><img src="https://cdn.jsdelivr.net/gh/whq123-blog/cdn/summer/2-3.jpg"></p>
<p><img src="https://cdn.jsdelivr.net/gh/whq123-blog/cdn/summer/2-4.jpg"></p>
<p><img src="https://cdn.jsdelivr.net/gh/whq123-blog/cdn/summer/2-5.jpg"></p>
<p><img src="https://cdn.jsdelivr.net/gh/whq123-blog/cdn/summer/2-6.jpg"></p>
<p><img src="https://cdn.jsdelivr.net/gh/whq123-blog/cdn/summer/2-7.jpg"></p>
<p><img src="https://cdn.jsdelivr.net/gh/whq123-blog/cdn/summer/2-8.jpg"></p>
<p><img src="https://cdn.jsdelivr.net/gh/whq123-blog/cdn/summer/2-9.jpg"></p>
<p><img src="https://cdn.jsdelivr.net/gh/whq123-blog/cdn/summer/2-10.jpg"></p>
<div style="background-color:#FF7F50 ;color:white;"><center><font size="20px">秋</font></center></div>



<p><img src="https://cdn.jsdelivr.net/gh/whq123-blog/cdn/autumn/3-1.jpg"></p>
<div style="background-color:#00B2EE ;color:white;"><center><font size="20px">冬</font></center></div>





<p><img src="https://cdn.jsdelivr.net/gh/whq123-blog/cdn/winter/4-1.jpg"></p>
<p><img src="https://cdn.jsdelivr.net/gh/whq123-blog/cdn/winter/4-2.jpg"></p>
<p><img src="https://cdn.jsdelivr.net/gh/whq123-blog/cdn/winter/4-3.jpg"></p>
<p><img src="https://cdn.jsdelivr.net/gh/whq123-blog/cdn/winter/4-4.jpg"></p>
<p><img src="https://cdn.jsdelivr.net/gh/whq123-blog/cdn/winter/4-5.jpg"></p>
<p><img src="https://cdn.jsdelivr.net/gh/whq123-blog/cdn/winter/4-6.jpg"></p>
<p><img src="https://cdn.jsdelivr.net/gh/whq123-blog/cdn/winter/4-7.jpg"></p>
<p><img src="https://cdn.jsdelivr.net/gh/whq123-blog/cdn/winter/4-8.jpg"></p>
<p><img src="https://cdn.jsdelivr.net/gh/whq123-blog/cdn/winter/4-9.jpg"></p>
<p><img src="https://cdn.jsdelivr.net/gh/whq123-blog/cdn/winter/4-10.jpg"></p>
<p><img src="https://cdn.jsdelivr.net/gh/whq123-blog/cdn/winter/4-11.jpg"></p>
<p><img src="https://cdn.jsdelivr.net/gh/whq123-blog/cdn/winter/4-12.jpg"></p>
<p><img src="https://cdn.jsdelivr.net/gh/whq123-blog/cdn/winter/4-13.jpg"></p>
<p><img src="https://cdn.jsdelivr.net/gh/whq123-blog/cdn/winter/4-14.jpg"></p>
<div style="background-color:#CCCCFF ;color:white;"><center><font size="20px">梦中</font></center></div>]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>杂记</tag>
      </tags>
  </entry>
  <entry>
    <title>I secretly broadcast on the dormitory LAN to praise my roommate</title>
    <url>/2021/06/05/I-secretly-broadcast-on-the-dormitory-LAN-to-praise-my-roommate/</url>
    <content><![CDATA[<p><font size="5px">为了积极响应并行计算的号召，也为了毕设铺路…我在狗(Go)语言的身上还是下了一点功夫。</font></p>
<div style="background-color:#FFA07A;"> 
<input type="checkbox" checked="checked"> vscode故障基本排除，正常使用<br><br>
<input type="checkbox" checked="checked"> gin中文文档过了一遍<br><br>
<input type="checkbox"> gin视频正在跟<br><br>
<input type="checkbox" checked="checked"> postman 学会了POST请求、和runner的配置使用<br><br>
<input type="checkbox" checked="checked"> gin广播，并成功地‘赞美’了舍友是猪，连上wifi，大家都可见<br><br>
</div>    


<p>​    </p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>杂记</tag>
      </tags>
  </entry>
  <entry>
    <title>GoodNotes</title>
    <url>/2021/05/30/GoodNotes/</url>
    <content><![CDATA[<h3 id="笔记整理1——针对理论化应试教育的笔记"><a href="#笔记整理1——针对理论化应试教育的笔记" class="headerlink" title="笔记整理1——针对理论化应试教育的笔记"></a>笔记整理1——针对理论化应试教育的笔记</h3><p><strong>原因：</strong>别人的笔记再有调理，也不是自己的，天然的排斥感，自己记过的是一个同化学习的过程。</p>
<p><strong>描述：</strong></p>
<p>1、基础学习时，只记录自己不熟悉的知识点</p>
<p>2、刷题目时，将错题、好题、自己就是想记下来的题整理到基础的后面【这里要说的是，电子版，直接在新建尾页，非常方面，如果是纸质版，撕开，重加一页，整理到资料册中】。</p>
<p>3、做真题时，和2做题一样对待。</p>
<p><strong>特点：</strong>各科通用，</p>
<p><strong>优点：</strong>内容上有针对性，内容之间有条理性</p>
<p><strong>缺点：</strong>时间开销大</p>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>Word embedding</title>
    <url>/2021/04/22/Word-embedding/</url>
    <content><![CDATA[<h3 id="词嵌入"><a href="#词嵌入" class="headerlink" title="词嵌入"></a>词嵌入</h3><p><strong>刷博客、看论文、做实验，从2019年的内容起步学习，之前的都已被淘汰…</strong></p>
<p>word2vec-神经网络语言模型</p>
<p>1.安装好NLTK-data包</p>
<hr>
<p>2.能用gensim中的Word2Vec训练自己语料库中的词嵌入表示<br><a href="https://machinelearningmastery.com/develop-word-embeddings-python-gensim/">https://machinelearningmastery.com/develop-word-embeddings-python-gensim/</a></p>
<hr>
<p>3.<a href="https://machinelearningmastery.com/develop-word-embedding-model-predicting-movie-review-sentiment/">https://machinelearningmastery.com/develop-word-embedding-model-predicting-movie-review-sentiment/</a></p>
<hr>
<p>4.Deep Convolutional Neural Network for Sentiment Analysis!</p>
<p><a href="https://machinelearningmastery.com/develop-word-embedding-model-predicting-movie-review-sentiment/">https://machinelearningmastery.com/develop-word-embedding-model-predicting-movie-review-sentiment/</a></p>
<hr>
<p>5.更先进的模型–BERT:</p>
<p><a href="https://blog.csdn.net/weixin_38267719/article/details/94005631?utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromMachineLearnPai2~default-4.control&amp;dist_request_id=&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromMachineLearnPai2~default-4.control">https://blog.csdn.net/weixin_38267719/article/details/94005631?utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromMachineLearnPai2%7Edefault-4.control&amp;dist_request_id=&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromMachineLearnPai2%7Edefault-4.control</a></p>
<hr>
<p>6.目前最先进的模型：</p>
<p><a href="https://blog.csdn.net/jclian91/article/details/104826655/?utm_medium=distribute.pc_relevant.none-task-blog-baidujs_title-4&amp;spm=1001.2101.3001.4242">https://blog.csdn.net/jclian91/article/details/104826655/?utm_medium=distribute.pc_relevant.none-task-blog-baidujs_title-4&amp;spm=1001.2101.3001.4242</a></p>
<p><a href="https://machinelearningmastery.com/develop-word-embedding-model-predicting-movie-review-sentiment/">https://machinelearningmastery.com/develop-word-embedding-model-predicting-movie-review-sentiment/</a></p>
<hr>
]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>word embedding</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2021/04/15/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<span id="more"></span>

<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
<h3 id="Clean-cache"><a href="#Clean-cache" class="headerlink" title="Clean cache"></a>Clean cache</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo clean</span></span><br></pre></td></tr></table></figure>



<h3 id="TAGS"><a href="#TAGS" class="headerlink" title="TAGS"></a>TAGS</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">//multi</span><br><span class="line">tags: 标题1</span><br><span class="line">//mono</span><br><span class="line">tags: [标题1,标题2,标题3]</span><br></pre></td></tr></table></figure>

<h3 id="TIPS"><a href="#TIPS" class="headerlink" title="TIPS"></a>TIPS</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1、写md文档、修改主题的_config.xml是不需要重启服务的</span><br></pre></td></tr></table></figure>





]]></content>
      <categories>
        <category>说明类文档</category>
      </categories>
      <tags>
        <tag>入门指令</tag>
      </tags>
  </entry>
  <entry>
    <title>run</title>
    <url>/2022/05/23/run/</url>
    <content><![CDATA[<p>许久许久前，我眼中的运动只有跑步一种，那时候是为了多一种升学方式，很重视，每次都是心惊肉跳，怕，怕跑步成绩不达标，怕看到失望的神情，怕不被认可，主观客观地促使我一直在坚持，那几年我的成绩一直不错，可能跑步是我当时最在意地和最害怕的存在了。</p>
<p>步入高中，少了几分动力吧，跑步还是体育课的日常，现在跑步对我来说是一种怀念，不方便洗澡学业紧张之类的，跑步也就是中规中矩的慢跑，少了几分激情，但达到了锻炼身体的效果，比一般同学跑得多一点，跑的快一点点吧，不比以前了，高一拿过长跑第三，之后再没有拿过前三名了，会不会这个时候我就在拒绝吃苦了。</p>
<p>大学跑步就更少了，没有限制，没有约束地选择兴趣，解放天性，跑步只是在体测中才出现的项目了，大学四年体测跑步仍是在组内第一，但我知道这个成绩已经是大不如前了。毽球，篮球，足球，轮滑，花样太多了，在轮滑社团呆过两年，那是我最快乐的两年，课外的进步总是最有成就感的，就感觉我比大家会的多一些，就更容易得到大家的尊重和认可。考研期间，我没再接触任何运动，只是简单的keep健身，塑形和保持健康罢了。</p>
<p>考研后我为了减重，开始跑步，从每一次跑步总会想起当初的骄傲，到每一次跑步得酣畅淋漓，怕热，怕流汗这些都不存在了，just run,more run,less pressure.</p>
<p>最近我在网上看到一位博主谈到冬泳，面对压力、抵制欲望、执行计划会消耗有限的 WillPower，集中注意力，视频中<strong>提到希望提高 WillPower上限，更好地集中注意力</strong> ，以应对生活中的更多的压力，焦虑。冬泳怪鸽坚持冬泳健身这一举动，令他影响深刻，为此<a href="https://www.bilibili.com/video/BV1F5411R7jb">他开展了长达30天的凉水澡实验</a>，实验中提到冷水健身使大脑认为生存受到威胁，会分泌一种神经传导物–<strong>去甲肾上腺素</strong>，暂时忘掉焦虑、烦恼，全身心去对抗寒冷，如果在-14℃下新陈代谢，心率会<strong>有所提高</strong>，长期暴露在寒冷环境多巴胺水平<strong>显著提高</strong>，所以平常会有一种温暖平静，充满动力的感觉。空调偏凉下使我感到兴奋，我对此深有体会。</p>
<p>你的身体在接触寒冷时后会有<strong>应激反应</strong>，而你恰好需要做的就是适应这个压力，这样可以让你更从容地应对生活中的各种压力。最终你甚至可以在忍受压力的同时还能保持平静。这才是最终目的。</p>
<p>一位博士说过，WillPower 就像一块肌肉，随着外界压力的不断锻炼，会使我们更从容地面对焦虑和恐惧，更少去逃避。</p>
<p>我想说的是，跑步也有应激反应，我的老师说过当你处于<strong>临界</strong>，呼吸困难时，加大步伐，大口呼吸，一段时间后，就会适应过来，你的跑步成绩会有一次突破，临界下的那种感觉每当想起总是心跳加速，因为每次你根本不知道你能不能熬过这个阶段。跑前一旦有着打算提高成绩的想法时，总会担心临界熬不过去，还没跑心跳就加快有些喘不过气了，在每节初中体育课上，太怀念这种感觉了，当时感觉生不如死，啥事都不算事了，除了语文，跑步也救不了哈哈哈。</p>
<p>著名的演说家莱斯·布朗说过：</p>
<p>当我们做困难的事</p>
<p>生活就会变得简单</p>
<p>一直做简单的事</p>
<p>生活就会变得困难</p>
<p>——LSE BROWN</p>
]]></content>
      <categories>
        <category>爱好</category>
      </categories>
      <tags>
        <tag>压力</tag>
        <tag>简单</tag>
        <tag>困难</tag>
        <tag>抗压能力</tag>
        <tag>去甲肾上腺素</tag>
      </tags>
  </entry>
  <entry>
    <title>数据结构到了</title>
    <url>/2021/05/12/think-then-go/</url>
    <content><![CDATA[<p>今天仅仅是复习完了矩阵，还有4章呢，听说内容挺少的，赶赶干</p>
<p>机器学习大作业得交了，IT项目管理考试要来了，并行计算大作业也下来了，这周忙碌命啊</p>
<p>英语，失宠好久了，自从核心词汇和基础词汇过了一遍，每天零零散散地刷一套在线题目（20），记了很多笔记，貌似也没重视起来，进度…进度…进度，你的语法题什么时候开始啊也别等到周末了，那个时候计划永远赶不上变换，贼难安排，每周周五的时候吧，拿出半天，看看英语（在线学习系统词组笔记、iPad记录的形近词汇、纸质笔记本上的单词语法、） </p>
<p>等等，今天数据结构的书也到了，二手的，卖家出于好心，把题也给做了。。408 3月初开始，这周就要 renew 了，散装英语在自己博客秀一把，不过分吧。</p>
<p>宇哥，你的视频是我学现代唯一的依靠了，跟着你走，我做题踏实多了，课本都没你讲的好，不过多吐槽了，赶快跟你学完，线代我都今天下载完成了。</p>
<p>不说了，不说了，把之前留下来的英语问题收收尾。</p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>杂记</tag>
        <tag>阶段性总结</tag>
      </tags>
  </entry>
  <entry>
    <title>一个典型长难句翻译</title>
    <url>/2021/04/27/%E4%B8%80%E4%B8%AA%E5%85%B8%E5%9E%8B%E9%95%BF%E9%9A%BE%E5%8F%A5%E7%BF%BB%E8%AF%91/</url>
    <content><![CDATA[<p><img src="/2021/04/27/%E4%B8%80%E4%B8%AA%E5%85%B8%E5%9E%8B%E9%95%BF%E9%9A%BE%E5%8F%A5%E7%BF%BB%E8%AF%91/fy.jpg" alt="fy"></p>
]]></content>
      <categories>
        <category>英语</category>
      </categories>
      <tags>
        <tag>翻译</tag>
        <tag>长难句</tag>
        <tag>多从句</tag>
        <tag>英语一</tag>
      </tags>
  </entry>
  <entry>
    <title>下阶段学习路线</title>
    <url>/2021/04/13/%E4%B8%8B%E9%98%B6%E6%AE%B5%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/</url>
    <content><![CDATA[<h3 id="1、LSTMs"><a href="#1、LSTMs" class="headerlink" title="1、LSTMs"></a>1、LSTMs</h3><p><a href="https://machinelearningmastery.com/multi-step-time-series-forecasting-long-short-term-memory-networks-python/?spm=a2c4e.10696291.0.0.5dec19a4ipYVI2">https://machinelearningmastery.com/multi-step-time-series-forecasting-long-short-term-memory-networks-python/?spm=a2c4e.10696291.0.0.5dec19a4ipYVI2</a></p>
<p>英文:</p>
<p> <a href="https://machinelearningmastery.com/multi-step-time-series-forecasting-long-short-term-memory-networks-python/">https://machinelearningmastery.com/multi-step-time-series-forecasting-long-short-term-memory-networks-python/</a></p>
<p>中文：</p>
<p><a href="https://blog.csdn.net/Together_CZ/article/details/84891772">https://blog.csdn.net/Together_CZ/article/details/84891772</a></p>
<span id="more"></span>

<h3 id="2、时间序列基线预测"><a href="#2、时间序列基线预测" class="headerlink" title="2、时间序列基线预测"></a>2、时间序列基线预测</h3><p>How to Make Baseline Predictions for Time Series Forecasting with Python</p>
<p><a href="http://machinelearningmastery.com/persistence-time-series-forecasting-with-python/">http://machinelearningmastery.com/persistence-time-series-forecasting-with-python/</a></p>
<h3 id="3、Multichannel-CNN"><a href="#3、Multichannel-CNN" class="headerlink" title="3、Multichannel CNN"></a>3、Multichannel CNN</h3><p>How to Develop a Multichannel CNN Model for Text Classification</p>
<p><a href="https://machinelearningmastery.com/?s=multichannel+CNN+Model&amp;post_type=post&amp;submit=Search">https://machinelearningmastery.com/?s=multichannel+CNN+Model&amp;post_type=post&amp;submit=Search</a></p>
<p><a href="https://machinelearningmastery.com/develop-n-gram-multichannel-convolutional-neural-network-sentiment-analysis/">https://machinelearningmastery.com/develop-n-gram-multichannel-convolutional-neural-network-sentiment-analysis/</a></p>
<h3 id="4、Deep-Convolutional-Neural-Network"><a href="#4、Deep-Convolutional-Neural-Network" class="headerlink" title="4、Deep Convolutional Neural Network"></a>4、Deep Convolutional Neural Network</h3><p>Deep Convolutional Neural Network for Sentiment Analysis (Text Classification)</p>
<p><a href="https://machinelearningmastery.com/develop-word-embedding-model-predicting-movie-review-sentiment/">https://machinelearningmastery.com/develop-word-embedding-model-predicting-movie-review-sentiment/</a></p>
<h3 id="5、Mask-R-CNN"><a href="#5、Mask-R-CNN" class="headerlink" title="5、Mask R-CNN"></a>5、Mask R-CNN</h3><p>How to Use Mask R-CNN in Keras for Object Detection in Photographs</p>
<p><a href="https://machinelearningmastery.com/how-to-perform-object-detection-in-photographs-with-mask-r-cnn-in-keras/">https://machinelearningmastery.com/how-to-perform-object-detection-in-photographs-with-mask-r-cnn-in-keras/</a> </p>
<h3 id="6、人脸识别的例子"><a href="#6、人脸识别的例子" class="headerlink" title="6、人脸识别的例子"></a>6、人脸识别的例子</h3><p><a href="https://machinelearningmastery.com/how-to-develop-a-face-recognition-system-using-facenet-in-keras-and-an-svm-classifier/">https://machinelearningmastery.com/how-to-develop-a-face-recognition-system-using-facenet-in-keras-and-an-svm-classifier/</a></p>
<h3 id="7、End"><a href="#7、End" class="headerlink" title="7、End"></a>7、End</h3><p>课上说道过，传统的机器模型很多已不再使用（用来解决实际问题，），提到过最新的某个模型Bert在当前应用广泛…</p>
<iframe src="//player.bilibili.com/player.html?aid=70156862&bvid=BV1YE411D7nH&cid=235890180&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>]]></content>
      <categories>
        <category>人工智能</category>
      </categories>
      <tags>
        <tag>机器学习</tag>
        <tag>深度学习</tag>
      </tags>
  </entry>
  <entry>
    <title>东京落幕</title>
    <url>/2021/08/08/%E4%B8%9C%E4%BA%AC%E8%90%BD%E5%B9%95/</url>
    <content><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/whq123-blog/cdn/others/cn38dongjing.jpg"></p>
]]></content>
      <categories>
        <category>奥运会</category>
      </categories>
      <tags>
        <tag>东京奥运会</tag>
      </tags>
  </entry>
  <entry>
    <title>两个典型长难句</title>
    <url>/2021/04/17/%E4%B8%A4%E4%B8%AA%E5%85%B8%E5%9E%8B%E9%95%BF%E9%9A%BE%E5%8F%A5/</url>
    <content><![CDATA[<p><strong>分析长难句步骤：</strong></p>
<p>1、先找连词（连接主从关系的句子or并列关系的句子，    总之连的是句子！！！）</p>
<p>2、再找谓语动词（连词数量 = 谓语动词-1）</p>
<p>3、确定主干，进而确定其他成分</p>
<p><strong>举两个栗子：</strong></p>
<p><img src="/2021/04/17/%E4%B8%A4%E4%B8%AA%E5%85%B8%E5%9E%8B%E9%95%BF%E9%9A%BE%E5%8F%A5/bj1.JPG" alt="bj1"></p>
]]></content>
      <categories>
        <category>英语</category>
      </categories>
      <tags>
        <tag>长难句</tag>
      </tags>
  </entry>
  <entry>
    <title>朋友，美好的生活在让你剁手</title>
    <url>/2021/05/16/%E5%89%81%E6%89%8B%E5%90%A7%EF%BC%8C%E6%9C%8B%E5%8F%8B/</url>
    <content><![CDATA[<p><img src="/2021/05/16/%E5%89%81%E6%89%8B%E5%90%A7%EF%BC%8C%E6%9C%8B%E5%8F%8B/IMG_20210516_232837.jpg"></p>
<h4 id="慵懒的上午"><a href="#慵懒的上午" class="headerlink" title="慵懒的上午"></a>慵懒的上午</h4><p>开启我的便携灯</p>
<p>起床，9点，一看，嘿，都在！</p>
<h4 id="奋斗的中午，"><a href="#奋斗的中午，" class="headerlink" title="奋斗的中午，"></a>奋斗的中午，</h4><p>疲于奔波在各大科目周作业、大作业上，没有午觉，</p>
<h4 id="积极的下午"><a href="#积极的下午" class="headerlink" title="积极的下午"></a>积极的下午</h4><p>数据结构看了3章，好吧挺简单的没什么好说的，</p>
<p>解决了win10下红警2【黑屏、右下角不完全显示】。win7兼容打开，ra2.ini 中  Video 下面修改分辨率为1366 X 768（win7时代的主流分辨率），千万别外传，这是咱兄弟之间的秘密，</p>
<p>用了一下超声波洗牙器，（前几天怀疑自己得了牙结石），不太会呀，换成牙刷头，还真的刷挺干净，口气清新多了，</p>
<p><img src="/2021/05/16/%E5%89%81%E6%89%8B%E5%90%A7%EF%BC%8C%E6%9C%8B%E5%8F%8B/IMG_20210516_232431.jpg"></p>
<p>啊对，还洗了个澡，睡了30min回笼#￥%&amp;……觉，巴适。</p>
<h4 id="奇幻的晚上，"><a href="#奇幻的晚上，" class="headerlink" title="奇幻的晚上，"></a>奇幻的晚上，</h4><p>第一尝试在走廊用网线上网，</p>
<p>第一次尝试笔记本满电腾讯会议能开多久，<font color="grey">用平板吧，笔记本撑死2小时</font></p>
<p>第一次在黑暗的环境中拿手机闪光灯看书、记笔记，</p>
<h4 id="哭泣的半夜"><a href="#哭泣的半夜" class="headerlink" title="哭泣的半夜"></a>哭泣的半夜</h4><p>数学还没结束，下周必须干完现代，我说的，xxx也拦不住，<strong>数学、专业课进度堪忧</strong>。</p>
<p>说好的洗衣服，还在那里摊着，下次一定，下次一定。</p>
<p>新鲜的笔记，只能明天整理了，还有几道题，逆置呢，还得再看看。</p>
<p>《马克思》，我今晚一定看好吧，</p>
<p>想运动来着，默默地瞅了一眼体重秤，</p>
<p>该给 明天做个计划，比如结束现代。</p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>杂记</tag>
      </tags>
  </entry>
  <entry>
    <title>单词有没背，我吐了</title>
    <url>/2021/04/12/%E5%8D%95%E8%AF%8D%E5%8F%88%E6%B2%A1%E8%83%8C%EF%BC%8C%E6%88%91%E5%90%90%E4%BA%86/</url>
    <content><![CDATA[<p>  上午忘带钥匙，回去洗了个头，还把课记错了</p>
<p>下午下课回去就学了数学，晚上还被骗去上防诈骗班会，晚上修修补补博客搜索引擎，就这样结束了，外面雨停了，我似乎又行了。</p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>杂记</tag>
      </tags>
  </entry>
  <entry>
    <title>吐槽，常微分方程</title>
    <url>/2021/04/20/%E5%90%90%E6%A7%BD%E5%B8%B8%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B/</url>
    <content><![CDATA[<p>离开了一元微积分，我的记忆更模糊了。</p>
<p>在没有网课的条件下，啃了课本理论一顿，便去做题，</p>
<p>这TM……</p>
<p>指导书上的题目都啃完了，怎么系统测试题这么离谱？</p>
<p>以下，关于我对该章的 <strong>puzzle</strong></p>
<p> →</p>
<hr>
<p><font size="4">1、<strong>通解</strong> ，是不是都长了一个样？</font></p>
<p>【答】非也，c的位置可能因为解题步骤的差异（同一个方法下），在分子，在分母，结果整体差一个正负，这都是一个C可以弥补的话，就可以容忍。</p>
<p>【补答】非也，一个微分方程如果用不同方法（比如用齐次方程（u = x/y ）、伯努利方程），就会得到两个不同的通解，傻傻地找了50分钟错误，┭┮﹏┭┮，想哭泣。</p>
<hr>
<p><font size="4">2、<strong>通解</strong> ，自己的结果和答案差距很大，c变换位置或者符号都弥补不了说明什么？</font></p>
<p>【答】你做错了，可能是哪里看错了，照着错误步骤走了下去。</p>
<hr>
<p><font size="4">3、使用 <strong>lnC</strong> 的原因？</font></p>
<p>【答】 往往是为了求特解时，在最后一步（lnY = lnf(x)+ lnC）时，更加方便地将ln去掉，换成C，你试试，麻烦不哭你。</p>
<hr>
<p><font size="4">4、<strong>特解</strong>， 是不是和通解一样，化去y’ ，只剩下 y 与 x 的方程就可？</font></p>
<p>【答】目前见过的答案都很牛p，全部都是 y = [c与x的组合] ,耗子尾汁。</p>
<hr>
<p><font size="4">5、方程变形时，移到<strong>分母</strong>的多项式是否讨论不为0？</font></p>
<p>【答】不必考虑。</p>
<hr>
<p><font size="4">6、解出来不定积分是否要再后面加上一个C ？  ∫1/x dx 还加绝对值吗？</font></p>
<p>【答】不加，微分方程只求一个原函数；绝对值也不加，一切从简。</p>
<hr>
<p><font size="4">7、一道题4遍能做出来4种结果是什么情况？每次这里也漏，那里也看错…</font></p>
<p>【答】滴个眼药水，休息一下，缓解一下眼疲劳，此刻往往附有书写潦草，不耐烦的迹象。真心需要休息了。</p>
<hr>
<p><font size="4">8、求 <strong>特解</strong> 的时候，把结果留到了ln表示的那一步（经常会有1/y 1/x），带入 x、y 特值后，发现分母为零，或者等式一边直接无穷，说明什么？</font></p>
<p>【答】不代表没有解，也不代表你错了，向下，将ln去掉后，再带入特值，||甚至化成 y=[…]的形式时，就一切正常了。</p>
<hr>
<p><font size="4">9、关于C在运算过程中要不要变的问题</font></p>
<p>【答】 在求解一个微分方程的通解/特解的过程，C难免要乘个系数，除个常数，这个时候都可以让C保持不变。</p>
<hr>
<p><font size="4">10、y = ∫C<sub>1</sub> * x +C<sub>1</sub>/3 * x<sup>3</sup> +C<sub>2</sub> </font> ,第二个有C<sub>1</sub>的地方可以整合掉系数吗？</p>
<p>【答】不可以，尤其是后面要求求解特值时，会出现误差，显然，这两个位置的C<sub>1</sub>已经符合某种倍数关系，不能忽视这种关系。</p>
<hr>
<p><font size="4">11、在二次微分方程降阶过程中，y’’ = f(x,y’) 不考虑 p=0，而在 y’’ = f(y,y’)中，要考虑p=0的情况，这怎么说。</font></p>
<p>【答】进一步讲，x不显露的那种情况下，考虑p=0，好吧，还是不太懂。</p>
]]></content>
      <categories>
        <category>数学</category>
      </categories>
      <tags>
        <tag>杂记</tag>
      </tags>
  </entry>
  <entry>
    <title>基于马克思主义的宿舍人际关系分析</title>
    <url>/2021/04/23/%E5%9F%BA%E4%BA%8E%E9%A9%AC%E5%85%8B%E6%80%9D%E4%B8%BB%E4%B9%89%E7%9A%84%E5%AE%BF%E8%88%8D%E4%BA%BA%E9%99%85%E5%85%B3%E7%B3%BB%E5%88%86%E6%9E%90/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，这个密码看着不太对，请再试试。" data-whm="抱歉，这个文章不能被纠正，不过您还是能看看解密后的内容。">
  <script id="hbeData" type="hbeData" data-hmacdigest="9d8305695f81307ffb2bc59318b4fdead99ef5070c4ab817f38644d6149f96c1"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好，这里需要密码。</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>杂记</tag>
      </tags>
  </entry>
  <entry>
    <title>宝藏网址，看这里就够了</title>
    <url>/2021/05/19/%E5%AE%9D%E8%97%8F%E7%BD%91%E5%9D%80%EF%BC%8C%E7%9C%8B%E8%BF%99%E9%87%8C%E5%B0%B1%E5%A4%9F%E4%BA%86/</url>
    <content><![CDATA[<h2 style="background-color: #EE0000"><font color="white">&nbsp;&nbsp;&nbsp;&nbsp;文档/手册</font></h2>

<hr>
<ul>
<li>SQL<ul>
<li><a href="https://dev.mysql.com/doc/refman/8.0/en/">MySQL :: MySQL 8.0 Reference Manual</a></li>
</ul>
</li>
<li>Python<ul>
<li><a href="https://docs.python.org/zh-cn/3/library/turtle.html">turtle — 海龟绘图 — Python 3.8.2 文档</a></li>
<li><a href="https://www.scikitlearn.com.cn/">sklearn 中文文档 - sklearn</a></li>
<li><a href="https://keras.io/zh/layers/about-keras-layers/">关于 Keras 网络层 - Keras 中文文档</a></li>
<li><a href="https://www.numpy.org.cn/">Numpy 中文文档</a></li>
<li><a href="https://www.pypandas.cn/">Pandas 中文文档</a></li>
<li><a href="https://pyecharts.org/#/">Pyecharts文档 百度开源</a></li>
</ul>
</li>
<li>前端<ul>
<li><a href="https://uniapp.dcloud.io/">uni-app官网</a></li>
<li><a href="https://www.runoob.com/jquery/jquery-tutorial.html">jQuery 菜鸟教程</a></li>
<li><a href="https://reactjs.bootcss.com/docs/getting-started.html">开始 – React | React 中文文档</a></li>
<li><a href="http://react.tgwoo.com/">React-Bootstrap</a></li>
<li><a href="https://code.z01.com/bootstrap-vue/">BootstrapVue-基于VueJS的Bootstrap框架 · 全球最流行的 HTML、CSS 和 JS 工具库</a></li>
<li><a href="https://www.layui.site/">layui镜像网站</a></li>
</ul>
</li>
<li>Go<ul>
<li><a href="http://www.topgoer.com/gin%E6%A1%86%E6%9E%B6/">gin框架 · Go语言中文文档</a></li>
<li><a href="https://books.studygolang.com/The-Golang-Standard-Library-by-Example/">简介 · Go语言标准库</a></li>
<li><a href="https://www.kancloud.cn/shuangdeyu/gin_book/949413">快速入门 · Gin中文文档 · 看云</a></li>
<li><a href="https://gorm.io/zh_CN/docs/">GORM 指南 | GORM - The fantastic ORM library for Golang, aims to be developer friendly.</a></li>
<li><a href="https://draveness.me/golang/">Go 语言设计与实现 | Go 语言设计与实现</a></li>
</ul>
</li>
<li></li>
</ul>
<h2 style="background-color: #EE0000"><font color="white">&nbsp;&nbsp;&nbsp;&nbsp;学习教程</font></h2>

<hr>
<h4 id="各种语言教程"><a href="#各种语言教程" class="headerlink" title="各种语言教程"></a>各种语言教程</h4><ul>
<li><a href="https://www.liaoxuefeng.com/">首页 - 廖雪峰的官方网站</a></li>
</ul>
<h4 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h4><ul>
<li><a href="https://study.163.com/course/courseLearn.htm?courseId=1004572025&from=study#/learn/video?lessonId=1049049317&courseId=1004572025">十天学会PHP（第六版） - 网易云课堂</a></li>
<li><a href="https://study.163.com/course/courseLearn.htm?courseId=1004732045#/learn/video?lessonId=1049773418&courseId=1004732045">入门后进阶：更强大的留言板 - 网易云课堂</a></li>
<li><a href="http://www.itheima.com/special/hmphpzly/?jingjia-heima-php-xin-pc-xitongxuexiphp">黑马程序员PHP培训班_优质PHP培训教程_PHP开发培训课程推荐</a></li>
<li><a href="http://yun.itheima.com/map/23.html?a5&tdsourcetag=s_pcqq_aiomsg">PHP视频教程完整版_PHP视频教程从入门到精通_黑马程序员</a></li>
</ul>
<h4 id="Python3"><a href="#Python3" class="headerlink" title="Python3"></a>Python3</h4><ul>
<li><a href="http://www.python3.vip/">| 白月黑羽教Python</a></li>
<li><a href="https://python123.io/index/turtles/colleges">Python123</a></li>
<li><a href="http://sdlg.alphacoding.cn/">AlphaCoding院校版 - alphacoding-web</a></li>
<li></li>
</ul>
<h5 id="实现小型编译器"><a href="#实现小型编译器" class="headerlink" title="实现小型编译器"></a>实现小型编译器</h5><ul>
<li><a href="https://pandolia.net/tinyc/">自己动手写编译器 — 自己动手写编译器</a></li>
</ul>
<h4 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h4><ul>
<li><a href="https://learngitbranching.js.org/">Learn Git Branching</a></li>
<li><a href="https://www.progit.cn/">Pro Git 中文版（第二版）</a></li>
<li><a href="https://www.liaoxuefeng.com/wiki/896043488029600">Git教程 - 廖雪峰的官方网站</a></li>
</ul>
<h4 id="SQL"><a href="#SQL" class="headerlink" title="SQL"></a>SQL</h4><ul>
<li> <a href="https://www.runoob.com/mysql/mysql-tutorial.html">MySQL 教程 | 菜鸟教程</a></li>
</ul>
<h4 id="Go"><a href="#Go" class="headerlink" title="Go"></a>Go</h4><ul>
<li><a href="https://www.liwenzhou.com/posts/Go/go_menu/">Go语言学习之路/Go语言教程-李文周</a></li>
<li><a href="https://tour.go-zh.org/welcome/1">简介 · Go语言标准库</a></li>
</ul>
<h5 id="轮滑"><a href="#轮滑" class="headerlink" title="轮滑"></a>轮滑</h5><ul>
<li><a href="https://space.bilibili.com/30839640?from=search&seid=11173422905792384920">淼哥轮滑的个人空间 - 哔哩哔哩 ( ゜- ゜)つロ 乾杯~ Bilibili</a></li>
</ul>
<h2 style="background-color: #EE0000"><font color="white">&nbsp;&nbsp;&nbsp;&nbsp;资源下载
</font></h2>


<hr>
<ul>
<li><a href="http://npm.taobao.org/mirrors/chromedriver/">ChromeDriver Mirror</a></li>
<li><a href="http://ms.sdut.edu.cn/download.html">正版软件管理与服务平台(山东理工大学)</a></li>
<li><a href="https://www.nocmd.com/740.html">VMware Workstation Pro v15.5.1 官方版+激活密钥-NoCmd</a></li>
<li><a href="http://www.1ppt.com/xiazai/zongjie/ppt_zongjie_2.html">工作总结PPT_工作总结PPT模板免费下载 - 第一PPT</a></li>
<li><a href="http://www.ypppt.com/moban/lunwen/">毕业论文答辩PPT模板_毕业设计论文答辩PPT模板下载 - 优品PPT</a></li>
<li><a href="http://www.php.cn/xiazai/">PHP中文网：一切建站资源免费下载</a></li>
<li><a href="http://pic.netbian.com/index_13.html">最新4K壁纸_最新4K桌面壁纸_彼岸图网</a></li>
<li><a href="https://ab.algoux.org/">Algo Bootstrap</a></li>
<li><a href="https://dev.mysql.com/downloads/file/?id=494993">MySQL :: Begin Your Download</a></li>
<li><a href="https://www.graviti.cn/open-datasets?utm_campaign=%E7%99%BE%E5%BA%A6%E6%8E%A8%E5%B9%BF&utm_medium=%E7%99%BE%E5%BA%A6&utm_source=%E7%99%BE%E5%BA%A6%E6%90%9C%E7%B4%A2&gio_link_id=LPd5Xgeo&searchBy=weather">公开数据集，数据集免费下载，图片数据集 | Graviti 格物钛</a></li>
<li><a href="https://www.xp.cn/">小皮面板(phpstudy) - 让天下没有难配的服务器环境！</a></li>
<li><a href="https://studygolang.com/dl">Go下载 - Go语言中文网 - Golang中文社区</a></li>
<li></li>
</ul>
<h2 style="background-color: #EE0000"><font color="white">&nbsp;&nbsp;&nbsp;&nbsp;在线办公/查询</font></h2>



<ul>
<li><a href="https://www.processon.com/">ProcessOn - 免费在线作图，思维导图，流程图，实时协作</a></li>
<li><a href="https://icons8.com/icons">Free Vector Icons — Download 632,900 icons (SVG, PNG)</a></li>
<li><a href="https://bj.96weixin.com/tools/rgb">RGB颜色对照表 - 96微信编辑器</a></li>
<li><a href="https://www.wondercv.com/cvs/47JNlMw/editor">超级简历WonderCV - HR推荐简历模板,智能简历制作工具,专业中英文简历模板免费下载</a></li>
<li><a href="https://www.dxsbb.com/news/2867.html">2021-2022计算机科学与技术考研学校排名_大学生必备网</a></li>
<li><a href="http://www.diugai.com/list.php">免费logo设计-logo在线制作-丢盖网</a></li>
<li><a href="https://www.lunwengo.net/">论文狗查重_免费论文查重入口_免费论文检测网站_一键智能降重修改 – 论文狗免费论文检测平台</a></li>
<li><a href="http://product.cnmo.com/compare_s57_p1624147_1625144_1625121_1625063_1625065.html">【荣耀Play、荣耀Play4、荣耀Play4Pro、荣耀Play4T、荣耀Play4TPro】对比参数配置_手机中国</a></li>
<li><a href="https://www.onlinedoctranslator.com/zh-CN/">www.onlinedoctranslator翻译【免费|保留文档原格式】</a></li>
<li><a href="https://www.splitapdf.com/zh/pdfsplitform">PDF分割【免费】</a></li>
<li><a href="https://www.pdfwordconvert.com/zh/">扫描文本转可编译Word文档【免费】</a></li>
</ul>
<h2 style="background-color: #EE0000"><font color="white">&nbsp;&nbsp;&nbsp;&nbsp;快捷通道</font></h2>

<hr>
<p><font color="grey">这表示我懒得给它归类，这里只提供入口</font></p>
<ul>
<li><a href="http://lx.lanqiao.cn/">“蓝桥杯”练习系统</a></li>
<li><a href="https://dasai.lanqiao.cn/pages/dasai/personal_my_dasai_detail.html?data_val=1869403572540">蓝桥杯我的大赛</a></li>
<li><a href="https://www.bmob.cn/">Bmob后端云</a></li>
<li><a href="http://cet-bm.neea.edu.cn/">全国大学英语四、六级考试报名网</a></li>
<li><a href="https://passport.neea.edu.cn/Home/login?userCode=1870893649@qq.com">ETEST通行证</a></li>
<li><a href="https://www.aliyun.com/activity/daily/cloud">上云必备——海量产品新用户专享优惠 ECS 96.9元/年</a></li>
<li><a href="https://up.woozooo.com/mydisk.php">蓝奏云</a></li>
<li><a href="https://outlook.live.com/mail/0/inbox">邮件 - z xc - Outlook</a></li>
<li><a href="http://sdxy.gov.cn/edit/index">国家企业信用信息公示系统</a></li>
<li><a href="https://yz.chsi.com.cn/zsml/querySchAction.do?ssdm=37&dwmc=%E4%B8%AD%E5%9B%BD%E7%9F%B3%E6%B2%B9%E5%A4%A7%E5%AD%A6(%E5%8D%8E%E4%B8%9C)&mldm=&mlmc=&yjxkdm=0812&xxfs=&zymc=">硕士专业目录_中国研究生招生信息网</a></li>
<li><a href="https://www.kaggle.com/c/machine-learning-on-thursday/overview">波士顿房价预测 | Kaggle</a></li>
<li><a href="https://cloudstudio.net/">Cloud Studio - 开启云端开发模式 WebIDE</a></li>
<li><a href="https://www.jsdelivr.com/">CDN加速</a></li>
<li><a href="https://www.qingcloud.com/products/instances/?source=baidu-zhuji&utm_source=AD&utm_medium=baidu&utm_campaign=NEW-%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8MFPC&utm_content=%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8+%E5%85%8D%E8%B4%B9&utm_term=%E5%85%8D%E8%B4%B9%E8%AF%95%E7%94%A8%E6%9C%8D%E5%8A%A1%E5%99%A8&bd_vid=9067701640379942604">云服务器-虚拟主机-云主机 | 青云QingCloud</a></li>
<li><a href="www.codingke.com">扣丁学堂</a></li>
<li><a href="https://www.aliyundrive.com/">阿里云盘入口</a></li>
</ul>
<h2 style="background-color: #EE0000"><font color="white">&nbsp;&nbsp;&nbsp;&nbsp;高效开发 模块/框架/模板</font></h2>

<hr>
<ul>
<li><p><a href="https://v5.bootcss.com/">Boostrap v5</a></p>
</li>
<li><p><a href="https://v4.bootcss.com/">Bootstrap v4 全球最受欢迎的 HTML、CSS 和 JS 框架，开发响应式布局、移动设备优先的 WEB 项目</a></p>
</li>
<li><p><a href="https://www.layui.site/">Layui - 经典模块化前端 UI 框架（镜像站点）</a></p>
</li>
<li><p><a href="https://html5up.net/">HTML5 UP! Responsive HTML5 and CSS3 Site Templates</a></p>
</li>
<li><p><a href="https://html5up.net/dimension">Dimension | HTML5 UP</a></p>
</li>
<li><p><a href="https://pyecharts.org/#/">Pyecharts文档 百度开源</a></p>
</li>
<li><p><a href="https://echarts.apache.org/zh/index.html">Apache ECharts</a></p>
</li>
<li><p><a href="http://sc.chinaz.com/jiaoben/caidanhaohang.html">菜单导航 -query导航条_jquery菜单</a></p>
</li>
<li><p><a href="https://hexo.io/themes/">Themes | Hexo</a></p>
</li>
<li></li>
</ul>
<h2 style="background-color: #EE0000"><font color="white">&nbsp;&nbsp;&nbsp;&nbsp;旁门左道</font></h2>

<hr>
<ul>
<li><a href="https://www.php.cn/tool/phpstorm/408348.html">正版phpstorm免费激活步骤（图文详解）-phpstorm-PHP中文网</a></li>
<li><a href="https://shimo.im/docs/ccyCWjdCWrhYJHhT/read">JetBrains 2020.2 版本 全家桶激活补丁</a></li>
<li><a href="https://www.jb51.net/article/196141.htm">最新WebStorm2020.2注册码永久激活(激活到2089年)[原创]_其它综合_脚本之家</a></li>
<li><a href="https://situcloud.ml/user##">首页 — 司徒云(限制访问)</a></li>
<li><a href="https://xqcloud.net/">小强cloud</a></li>
<li><a href="https://speed.cafecat.club/">咖啡猫</a></li>
<li><a href="https://muniucloud.work/user">牧牛云</a></li>
<li><a href="https://cloud.6y8u.net/m/shop">速蛙云</a></li>
<li><a href="https://jike138.net/auth/register">极客云(限制访问)</a></li>
<li><a href="https://888888.sbs/auth/register">桃花云</a></li>
<li><a href="https://yunduanxin.net/">免费接短信,在线接收短信验证码 - 云短信</a></li>
<li><a href="https://www.materialtools.com/?page=1">云短信 - 在线短信接收</a></li>
<li><a href="https://greasyfork.org/zh-CN">Greasy Fork - 安全、实用的用户脚本大全</a></li>
<li><a href="https://www.123xpg.com/?temp=0.12806757181131045">小苹果活动助手 - 大空白’blog - CF活动助手,逆战活动助手,最新游戏活动装备道具一键轻松领取</a></li>
<li><a href="https://www.nocmd.com/740.html">VMware Workstation Pro v15.5.1 官方版+激活密钥-NoCmd</a></li>
<li><a href="http://www.zdfans.com/html/31668.html">破解版下载网址 - zd423</a></li>
<li><a href="http://www.html22.com/zh/">(New!)网页转换助手</a></li>
<li><a href="https://v.ctrlqq.com/">(New!)腾讯优酷爱奇艺B站VIP视频解析</a></li>
<li><a href="https://wannengrun.com/zh/">万能命令-快捷寻找和直达你想要的各类工具（比如，追剧？）</a></li>
<li><a href="https://kinhdown.kinh.cc/">(New!)百度网盘不限速下载</a></li>
</ul>
<h2 style="background-color: #EE0000"><font color="white">&nbsp;&nbsp;&nbsp;&nbsp;有象征意义的网站</font></h2>

<hr>
<ul>
<li><a href="https://www.tiobe.com/tiobe-index/">TIOBE 排行榜</a></li>
<li><a href="https://www.cs.usfca.edu/~galles/visualization/Algorithms.html">Data Structure Visualization</a></li>
<li></li>
</ul>
<h2 style="background-color: #EE0000"><font color="white">&nbsp;&nbsp;&nbsp;&nbsp;个人需求/喜好</font></h2>

<hr>
<ul>
<li><a href="https://www.sohu.com/a/166369014_99985043">自己搭建一个云盘！只要半个小时！全平台支持！</a></li>
<li><a href="https://dl.3dmgame.com/pc/60667.html">鬼泣4：特别版 3DM简体中文免安装版下载_鬼泣4：特别版 中文版下载_单机游戏下载大全中文版下载_3DM单机</a></li>
<li><a href="https://www.jb51.net/article/72537.htm">JQuery Ajax动态生成Table表格_AJAX相关_脚本之家</a></li>
<li><a href="https://www.jianshu.com/p/c9c719821198">51个css时间轴 - 简书</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/26625249">GitHub+Hexo 搭建个人网站详细教程 - 知乎</a></li>
<li><a href="https://cloud.tencent.com/developer/article/1151858?from=information.detail.%E8%85%BE%E8%AE%AF%E4%BA%91%E5%85%8B%E9%9A%86%E6%9C%8D%E5%8A%A1%E5%99%A8">腾讯云无缝切换服务器 - 云+社区 - 腾讯云</a></li>
<li><a href="https://www.xp.cn/wenda/394.html">phpstudy v8.0创建本地站点域名教程（图文） - phpStudy交流社区</a></li>
<li><a href="https://www.cnblogs.com/yuwensong/p/11474032.html">Linux下安装java及配置(yum安装) - 天道酬勤，坚持！ - 博客园</a></li>
<li><a href="https://dreamer.blue/blog/?tdsourcetag=s_pcqq_aiomsg">bLue’s blog</a></li>
<li><a href="https://www.jb51.net/article/145282.htm">通过jquery的ajax请求本地的json文件方法_jquery_脚本之家</a></li>
<li><a href="https://www.sohu.com/a/486239837_120855974">2021上半年微博热搜榜趋势报告-新浪微博_pdf</a></li>
<li></li>
</ul>
<hr>
]]></content>
      <categories>
        <category>收录整理</category>
      </categories>
      <tags>
        <tag>实用</tag>
        <tag>工具类</tag>
        <tag>便捷</tag>
      </tags>
  </entry>
  <entry>
    <title>我的第一篇github博文</title>
    <url>/2021/04/11/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E6%96%87/</url>
    <content><![CDATA[<p> 面试学弟，</p>
<p>舍友中午面试没睡午觉</p>
<p>机器学习作业没写</p>
<p>困啊…</p>
<p>单词60个，冲</p>
<p>测试1</p>
<iframe src="//player.bilibili.com/player.html?aid=247337864&bvid=BV1zv41187cx&cid=315485653&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>  

<p>测试2</p>
<iframe height="450" width="800" src="//player.bilibili.com/player.html?aid=247337864&bvid=BV1zv41187cx&cid=315485653&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>  

<p>测试3</p>
<iframe height="225" width="400" src="//player.bilibili.com/player.html?aid=247337864&bvid=BV1zv41187cx&cid=315485653&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>  

<p>测试4</p>
<iframe height="200" width="300" src="//player.bilibili.com/player.html?aid=247337864&bvid=BV1zv41187cx&cid=315485653&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>  

<p>测试5</p>
<iframe height="150" width="300" src="//player.bilibili.com/player.html?aid=247337864&bvid=BV1zv41187cx&cid=315485653&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>  

<p>测试6（自适配）</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">&amp;high_quality=1 (1=最高画质 0=最低画质)</span><br><span class="line"></span><br><span class="line">&amp;danmaku=0 (1=打开弹幕 0=关闭弹幕)</span><br><span class="line"></span><br><span class="line">iframe 参数</span><br><span class="line"></span><br><span class="line">allowfullscreen=&quot;allowfullscreen&quot; #移动端全屏</span><br><span class="line"></span><br><span class="line">sandbox=&quot;allow-top-navigation allow-same-origin allow-forms</span><br><span class="line">allow-scripts&quot; #禁止弹出网页</span><br></pre></td></tr></table></figure>



<div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;">
<iframe style="position: absolute; width: 100%; 
height: 100%; left: 0; top: 0;" src="//player.bilibili.com/player.html?aid=247337864&bvid=BV1zv41187cx&cid=315485653&page=1&high_quality=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>
</div> ]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>杂记</tag>
        <tag>水文</tag>
      </tags>
  </entry>
  <entry>
    <title>张三的内心独白</title>
    <url>/2022/01/10/%E5%BC%A0%E4%B8%89%E7%9A%84%E5%86%85%E5%BF%83%E7%8B%AC%E7%99%BD/</url>
    <content><![CDATA[<h2 id="张三的内心独白"><a href="#张三的内心独白" class="headerlink" title="张三的内心独白"></a>张三的内心独白</h2><p>1、我是一个<strong>慢热</strong>的人，节奏慢，学习进入状态慢，容易受环境影响，不自律，在<strong>不监督</strong>的情况下很容易松懈，需要被监督，施加压力，或许是我身处舒适圈，或许是我没有找到自己的路，亦或许缺少一个强大的内心。</p>
<p>2、同时，我也是一个<strong>追求逻辑缜密</strong>的人，</p>
<p>3、我是一个<strong>讨厌抽象</strong>的人，学东西不喜欢不带例子的理论，喜欢通过例子去理解规律（或者说，由浅入深，由特殊到一般？）,别人凝练的总归不是自己的，即使是自己凝练出来的，生怕忘了也会附上例子的。<br>4、我是一个<strong>沉迷联系</strong>的人，举一反三，总想把很多东西都串联起来，在生活中几乎病态，特别希望让所有的事情全部都是联系起来，比如一呆就是一上午，不会挪一个地方，哪怕那天洗澡就会因为某一件事情会改变这个安排，所有的安排都会在无时无刻的变着，一切都是按着一个最省路子或者是最省时间的一个顺序去做，同时我也这次感到心烦，我希望解耦合，所有的事情相互联系之间太紧密了，这让我无时无刻不感到累。</p>
<p>5、我是一个<strong>贼爱做整理</strong>的人，整理相册，云盘，电脑，学习资料，博客，“扬弃”，整理整理再整理，让我的资源井井有条又实用是我最大的快乐，我总喜欢尽可能地保留，前面的项目就是今后的模板，今后理解遗忘理论的可行案例。</p>
<p>6、我是一个<strong>不自信</strong>的人，因为还是不够好，忘了自己不够好后会获得短暂的快乐，清醒后又纠结自己这是否值得。</p>
<p>7、我是一个<strong>幸运</strong>的人，有李*学姐，李 *学长，郭 * * 学长，等等实验室一大帮人研究生学姐学长，社团爱好，web学习环境，父母的支持，可爱的徒弟，活泼开朗的薛同位。。。</p>
<p>8、我<strong>不喜欢背诵</strong>，哪怕背诵也得有逻辑，政治就是积累语料，压题中了只是更好。</p>
<p>9、我太<strong>喜欢一手好字</strong>,他照出了我的生活态度，我的心态，有时自己也不知道。</p>
<p>10、我<strong>离不开运动</strong>，因为运动和游戏一样可以提高神经系统兴奋性，（提高代谢）从而提高效率，提高身体素质</p>
<p>11、我或许<strong>多愁善感</strong>，格外地，我瞧不起影响别人心态的，或者说是不顾别人情绪的那类人，时间是可以冲淡我对这件事的反感，渐渐再去接受那个人的积极阳光，人都是自私的，我也不例外，但同时创伤他人（无视集体利益）的注定会被瞧不起。</p>
<p>12、凡事预则立，不预则废，我总爱<strong>设立计划</strong>，这是态度问题，从一开始的不切实际，到后来的精打细算，争分夺秒，这个过程我过得很充实，至少真的没后悔过。</p>
<p>13、<strong>爱吃</strong>，心情好的时候还吃，观摩影视作品时候心情就好，就爱吃。</p>
<p>14、初中升学梦，宿舍催人懒，时光不待人，无负韶华时…</p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>研后总结</tag>
        <tag>一脸研诉</tag>
      </tags>
  </entry>
  <entry>
    <title>数学我选二</title>
    <url>/2021/05/01/%E6%95%B0%E5%AD%A6%E6%88%91%E9%80%89%E4%BA%8C/</url>
    <content><![CDATA[<p><img src="/2021/05/01/%E6%95%B0%E5%AD%A6%E6%88%91%E9%80%89%E4%BA%8C/IMG_20210501_150343.jpg" alt="IMG_20210501_150343.jpg"></p>
<p>今天来聊一聊分部积分，这是第n次重温了，</p>
<p>反对幂指三，这个顺序  ，我更愿意分成 [反 对 | 幂 | 指 三]</p>
<p>如果让 <strong>对数、幂函数</strong> 在前面作为u，结果是对它们 降阶， （x<sup>2</sup> -&gt; 2x | ln <sup>x</sup> -&gt; 1/x）是会结束的</p>
<p>如果求 <strong>指数和三角</strong> 的分部积分，结果是循环的，不会结束的</p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>杂记</tag>
      </tags>
  </entry>
  <entry>
    <title>灵魂拷问</title>
    <url>/2021/05/16/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</url>
    <content><![CDATA[<p>1、链表中，常用尾插法，那么对于头插法的要求是掌握还是理解？</p>
<p>​    【答】都要掌握，</p>
<p>2、顺序栈和队列平时用的更多，链式的也要重视还是理解即可？</p>
<p>​    【答】今天总结的基础方法都要掌握（天勤：除非题目明确使用链式，否则尽量避免链式）</p>
<p>3、做题时（王道），是先做客观题（初期），还是综合应用题一起看？</p>
<p>​    【答】先把天勤全部过一遍（客观题+综合题），王道作为第二轮，还有一个1800那本书，可以作为第三轮</p>
<p>4、逻辑结构定义方式上，天勤链队和自己的不太有出入，，到时候按照自己来也是可以的？（例如：天勤P58）</p>
<p>​    【答】手写的会是，伪代码，只要体现的是正确的思想，就是可以的，<strong>多练习手写伪代码</strong></p>
<p>5、快排，nlogn怎么来的？</p>
<p>​        【答】哔哩哔哩搜索吧，，，这个贯穿数据结构全部学习，所有算法都可以考察这个，<strong>时空复杂度、题目刷起来</strong>。</p>
<p>6、天勤先不看题了，做题的时候一起吧？</p>
<p>​    【答】学完一章，课后做章节。</p>
]]></content>
      <categories>
        <category>数据结构</category>
      </categories>
      <tags>
        <tag>答疑讨论1-3</tag>
      </tags>
  </entry>
  <entry>
    <title>既纠结，又可惜</title>
    <url>/2021/04/15/%E6%97%A2%E7%BA%A0%E7%BB%93%EF%BC%8C%E5%8F%88%E5%8F%AF%E6%83%9C/</url>
    <content><![CDATA[<hr>
<p>进一步完善我的blog，有一个在线admin或许更方便，这与github Page的静态概念似乎有些冲突，当初看中github page的原因就是长期部署，免费，我都是本地在源码环境（命令行方式）下 <strong>new</strong> 一个 <strong>post</strong> ，本地 <strong>edit</strong>，再<strong>deploy</strong>，是程序员最爱的的朴实无华style。</p>
<p><strong>csdn</strong>的习惯催生着我对在线编辑的探索，结果是很amazing啊，确实实现了，也确实让我纠结了，<strong>他是个本地在线编辑器</strong>，说白了，本地有了个人机交互界面，这哪里有我Typora用起来香啊。</p>
<span id="more"></span>

<p>在进一步，然这个本地在线编辑能够远程访问，不就近似为远程编辑了，构想</p>
<hr>
<p><font color="#00BFFF">  <strong>[本地]</strong> （【本地】——访问———–→【在线编辑器】——–编辑、推送） </font> → <font color="#FF4500">【github】———发布</font></p>
<p><font color="#00BFFF">【本地】</font>——访问    → <font color="#FF4500">  <strong>[远端]</strong> （【在线编辑器】——–编辑、推送————→【github】———发布）</font></p>
<hr>
<p>挺好的，挺好的，就是得费点钱，局域网扔个博客在线编辑器，也就一个屋子里使用（类似：打开了，并没有完全打开，#手动滑稽），so 能想到的也就扔到服务器上了，这样一来，都能访问到，问题解决了，结束了，</p>
<p>是这样的吗？</p>
<p>回过头来看，我当初选择github的初衷——–为了免费，为了长期发布，取代我的服务器，</p>
<p>这下我又跟服务器扯上关系了，那么我又将生活到服务器选购，项目迁移，部署的日子中了，往复循环，</p>
<p><strong>甚至，有自己的服务器，就完全可以开放一个端口，直接对外发布得了，github都省了…</strong></p>
<p>思虑再三，<strong>本地在线编辑admin</strong>和<strong>命令行+Typora</strong>相比，前者对我来说属实鸡肋，在线编辑就真的不能远程有免费的方案吗，如果答案是否定的那么它确实不香。</p>
]]></content>
      <categories>
        <category>说明类文档</category>
      </categories>
      <tags>
        <tag>提醒</tag>
      </tags>
  </entry>
  <entry>
    <title>是该给你的思想减减负了</title>
    <url>/2021/05/24/%E6%98%AF%E8%AF%A5%E7%BB%99%E4%BD%A0%E7%9A%84%E6%80%9D%E6%83%B3%E5%87%8F%E5%87%8F%E8%B4%9F%E4%BA%86/</url>
    <content><![CDATA[<h3 id="谁说吃饭就一定要玩手机？"><a href="#谁说吃饭就一定要玩手机？" class="headerlink" title="谁说吃饭就一定要玩手机？"></a><font color="#00BFFF">谁说吃饭就一定要玩手机？</font></h3><p>吃饭的时候玩手机让你开心了吗？还是曾经令你开心，现在只是机械的重复这个行为</p>
<h3 id="一门心思专注可以有多重要？"><a href="#一门心思专注可以有多重要？" class="headerlink" title="一门心思专注可以有多重要？"></a><font color="#6495ED">一门心思专注可以有多重要？</font></h3><p>一天可以不回宿舍，中午不睡觉，晚上睡前也不会累，期间只是休息20min，得到的是计划的顺利执行，最关心的事情第一时间被解决</p>
<h3 id="这么做有意义吗？"><a href="#这么做有意义吗？" class="headerlink" title="这么做有意义吗？"></a><font color="#1E90FF">这么做有意义吗？</font></h3><p>直接地，回报大于代价？</p>
<p>时间和精力是有限的，</p>
<p>睡觉是原则问题，不能随便动摇，他直接决定了我的学习效率，也是我能否提高幸福指数的重要因素，因此是有意义的，</p>
<p>我是以意义为标准支配自己的时间，安排活动的开展。</p>
<h3 id="为什么要记笔记？"><a href="#为什么要记笔记？" class="headerlink" title="为什么要记笔记？"></a><font color="#8470FF">为什么要记笔记？</font></h3><p>试问，那么多辅导资料，你会做的比他们更好？更有逻辑性？</p>
<p>从我自身出发，笔记是为了针对个人的，强化某一次小块知识点而存在的，不必有高度概括性 ，<strong>但一定要有针对性</strong>，如果你后面不去看它，那只是夯实了你的逻辑，时间一久，毫无意义。</p>
<h3 id="其实吧，每天都是美好的"><a href="#其实吧，每天都是美好的" class="headerlink" title="其实吧，每天都是美好的"></a><font color="#FF8247">其实吧，每天都是美好的</font></h3><p>每一天都是美好的，大多时候是自己没有愿意慢下来，去仔细感受，庆幸自己身边所拥有的，食堂今天吃什么，超市一会买什么，快递到了吧，体重又下来了，晚上买点什么零食，专门挤出个时间看个电影，今天就可以把… 结束了 今天又睡醒了…</p>
<h3 id="诱惑指数"><a href="#诱惑指数" class="headerlink" title="诱惑指数"></a><font color="#EE9A49">诱惑指数</font></h3><p>掌握一项新的应用能力 ******</p>
<p>逛淘宝 *****</p>
<p>听小说 ****</p>
<p>写博客 ***</p>
<p>玩游戏 *</p>
<h3 id="放松和放纵"><a href="#放松和放纵" class="headerlink" title="放松和放纵"></a><font color="#9370DB">放松和放纵</font></h3><p>做不到抵制的诱惑，切勿触碰，那会是你承受不起的代价，这不是用来放松的借口</p>
<h3 id="为什么要学-GO-？"><a href="#为什么要学-GO-？" class="headerlink" title="为什么要学 GO ？"></a><font color="#6C7B8B">为什么要学 GO ？</font></h3><p><strong>解决一下go初学时的那几个遗留问题</strong>，为什么学 GO （狗语言），还要用 GoLand （够烂的）开发？</p>
<p>vsCode 不会配，太麻烦了，哎，迫不得已，用 GO 是为了我的项目有更好的性能，可以在软件测试中体现。</p>
<h3 id="我劝，各位年轻人"><a href="#我劝，各位年轻人" class="headerlink" title="我劝，各位年轻人"></a><font color="#458B00">我劝，各位年轻人</font></h3><p>多总结，</p>
<p>在能承受最坏代价的前提下多尝试，</p>
<p>对自己高要求，</p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>杂记</tag>
      </tags>
  </entry>
  <entry>
    <title>暑假出行指南</title>
    <url>/2021/08/02/%E6%9A%91%E5%81%87%E5%87%BA%E8%A1%8C%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<h2 id="暑假出行指南"><a href="#暑假出行指南" class="headerlink" title="暑假出行指南"></a>暑假出行指南</h2><h2 id="洗护"><a href="#洗护" class="headerlink" title="洗护"></a>洗护</h2><ul>
<li>洗<ul>
<li>洗面奶</li>
<li>沐浴乳</li>
<li>洗发液</li>
<li>小毛巾（洗澡用）</li>
<li>吹风机(确认不提供的前提下)</li>
<li>洗衣液（再买）</li>
<li>折叠盆（便携）</li>
<li>牙刷，牙膏，牙缸</li>
<li>鞋刷</li>
</ul>
</li>
<li>护<ul>
<li>刮胡刀</li>
<li>爽肤水</li>
<li>眼贴</li>
<li>芦荟胶（绝对有用，防止皮肤意外需要）</li>
</ul>
</li>
</ul>
<h2 id="衣物"><a href="#衣物" class="headerlink" title="衣物"></a>衣物</h2><ul>
<li>袜子</li>
<li>两双鞋（要洗，轮换穿）</li>
<li>洗澡拖鞋（再买）</li>
<li>上衣裤子*2（要洗）</li>
<li>薄外套一件（防晒）</li>
<li>贴身衣物*3（如果是夏天每天洗澡，毕竟不是速干的）</li>
<li>晾衣架 *5</li>
</ul>
<h2 id="办公需求"><a href="#办公需求" class="headerlink" title="办公需求"></a>办公需求</h2><ul>
<li>A4纸（再买）</li>
<li>各科书 笔记 题</li>
<li>水杯</li>
<li>iPad，PC，Mobile Phone 充电器</li>
<li>笔芯 （再买吧，太重了）</li>
</ul>
<h2 id="备用"><a href="#备用" class="headerlink" title="备用"></a>备用</h2><ul>
<li>夜灯，（没必要）</li>
<li>床上的USB插板（给耳机，手环充电）</li>
<li>药<ul>
<li>牛黄上清片、冰硼含片（智齿发炎）</li>
<li>氯霉素滴眼液（角膜炎）</li>
<li>维生素 B2</li>
<li>晕车药（必备）</li>
</ul>
</li>
<li>眼罩（若灯光不能被个人意志决定）</li>
<li>坐垫（如果长期坐着的话）</li>
</ul>
<h3 id="基础设施"><a href="#基础设施" class="headerlink" title="基础设施"></a>基础设施</h3><ul>
<li>快递点</li>
<li>厕所</li>
<li>超市</li>
<li>吃饭（早、中、晚）</li>
<li>水果（如果居住时间较长的话）</li>
</ul>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>阶段性总结</tag>
        <tag>实用</tag>
      </tags>
  </entry>
  <entry>
    <title>末春，夏将至</title>
    <url>/2021/04/19/%E6%9C%AB%E6%98%A5%EF%BC%8C%E5%A4%8F%E5%B0%86%E8%87%B3/</url>
    <content><![CDATA[<p><img src="/2021/04/19/%E6%9C%AB%E6%98%A5%EF%BC%8C%E5%A4%8F%E5%B0%86%E8%87%B3/1.jpg" alt="1"></p>
<p>差点离开这个美丽的人间，</p>
<p>淄博，</p>
<p>跟北京今天都破27℃，</p>
<p>校园里的同学齐刷刷的大白裤衩，上身短袖，或配上短裙，</p>
<p>在烈日的照耀下，我去往信息楼，，，</p>
<p>宛然入夏。</p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>日记</tag>
      </tags>
  </entry>
  <entry>
    <title>每日安排</title>
    <url>/2021/04/17/%E6%AF%8F%E6%97%A5%E5%AE%89%E6%8E%92/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，这个密码看着不太对，请再试试。" data-whm="抱歉，这个文章不能被纠正，不过您还是能看看解密后的内容。">
  <script id="hbeData" type="hbeData" data-hmacdigest="c5b67de500902adfdce8712a1bbd5d1b86f49bbcc82b29da84eada49dd67dc68">864cb16dec9f54c6b2ab440ca95f2b2787879dca1efffda258336d5eb9aa067f262866d181fa9287dee76c8394375c8c53f945d46fc083fea341fbca93c1444a83ed0391d0166f2e384461044bb7917405c0826dc7f5124938f2da22f31d99754b1252847679323b1893883be609ad95c147e68901a5a69655ba3061eacf5dddbf4d981e1c62c7030c14916bd3f06b5d33618ced679dfe2ce4804003b5896aad978cc3a1fbbed04a410f333961899b5de5d23d25feb0f6de83d345daafded0744502188198844d4bbb74f2b59ec2ec1d3975ee2188f83c48476cf34cf2d94e32ea55a54a73fbce3beee13ee32fa89205bfb3de4d0dfd0678cbf24c9b8cbbf57c01c4def5f105333a0ad3b027a606200de735a2c7c30372e39bcf76711db7d2e8efdcd240536ee2326e7311dd44c8bdab2d23e6d99d2cab530060561333df3f3d10b8e39e465c81a1c7d0615d66a99fffd97df279fd0806be90586500dd0ac97bf434a6de1c7b242c92344e23d9421b533fee85d7d633012be6d373d78102f2e7df02afee9da4f78bb17558936e1515c23e9f6e3ec1bf544469addeee57c0890dcbe776442734993e620ae31d091981a65a5baefe51a4a9e32b42d45b573fe231be41e7d87ca618554ed3734aa363e6a8153dd6a60b517189c443fd927c9d70aca0556e4c827be44de384170241ba0fbe85a3a397f2f349089fadc87ae62dc477690ab2becf5625f3c4bcfcba7caa65707a5604340b9c590d9ad3056558b769d21443fb472d309890c63155766e8dd97f941611ea4c931edbc8a68315bd5c599f750fa5d734e851d847bf18e4831f5cbcc1a922494ba36f1183bc86cb18f21cdb67969004318ccf251b05ada18f4d5b3462ef854d148ba1c7d7246129cae324f32a6553a5362c63f9998c363b3745135010bb57a2227cfddfaab241540452857dfbc3025a3f3c5ef6d86d02793f998961623b358508a4002acfd13ba213d6cf7970ccbcc4e7920c8cbc0ccff51a27a934faf42ec8ed08e424d5a63a902c1dacaeb85e0a9dceae359819e1abacfdbe582c23d07189da26ccd4be6136d83d5256d29806c641045cb402c35084011868c3bf4def573e0c8e14842a576c6c29386c688f8529ea6071e07c3012b274d1295edbe3b99d9c5cf5277fe67e36088300075ec458560ade85cf8fbe61095dba71c0b97cce60165473fc359b29e11e784963b8</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好，这里需要密码。</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>杂记</tag>
      </tags>
  </entry>
  <entry>
    <title>确定毕设不是开发后的开发后续学习</title>
    <url>/2022/01/13/%E7%A1%AE%E5%AE%9A%E6%AF%95%E8%AE%BE%E4%B8%8D%E6%98%AF%E5%BC%80%E5%8F%91%E5%90%8E%E7%9A%84%E5%BC%80%E5%8F%91%E5%90%8E%E7%BB%AD%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<blockquote>
<p>探寻研究方向的一个晚上，面前有三个选择，<code>开发</code> 、<code>算法</code>、<code>系统</code>，然后偏离了主题，做起了项目技术总结<code>Xmind</code>,感觉技术有些落伍了，学到的过于简单了， 瞅上了web开发上的问题…</p>
</blockquote>
<p>jQuery 持续没落？</p>
<p>前后端分离是大趋势？</p>
<p>还有那些迟来的概念：</p>
<p><a style="font-size:20px;text-decoration:none" href="https://www.bilibili.com/video/BV1a34y1R7Fs?spm_id_from=333.999.0.0">1、serveless云开发的概念   ←<span style="font-size:15px;">点击查看</span></a></p>
<hr>
<div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;">
<iframe style="position: absolute; width: 100%; 
height: 100%; left: 0; top: 0;" src="//player.bilibili.com/player.html?aid=807073815&bvid=BV1a34y1R7Fs&cid=453559117&page=1&high_quality=1&danmaku=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>
</div> 


<p><a style="font-size:20px;text-decoration:none;" href="https://www.bilibili.com/video/BV1dT4y1o7vb?spm_id_from=333.999.0.0">2、云开发前端网页托管  ←<span style="font-size:15px;">点击查看</span></a> </p>
<hr>

<p><font color="grey">比如 ，GitHub Page！！！</font></p>
<p><font color="grey">      比如，</font> <code>HUGO</code>，<font color="grey">      做官网开发</font>  <a style="text-decoration:none;color:green" href="https://gohugo.io/">The world’s fastest framework for building websites | Hugo</a></p>
<div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;">
<iframe style="position: absolute; width: 100%; 
height: 100%; left: 0; top: 0;" src="//player.bilibili.com/player.html?aid=933717515&bvid=BV1dT4y1o7vb&cid=428199680&page=1&high_quality=1&danmaku=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>
</div> 


<p><font color="grey">Tip:       curd: create update research delete</font></p>
<p><a style="font-size:20px;text-decoration:none" href="https://www.bilibili.com/video/BV1qS4y1d7ZM?spm_id_from=333.999.0.0">3、传统网页？app？web应用？</a> 那<a style="font-size:20px;text-decoration:none" href="https://www.bilibili.com/video/BV16L4y1v7DR?spm_id_from=333.999.0.0">小程序？    ←<span style="font-size:15px;">点击查看</span></a></p>
<hr>
<a style="font-size:20px;text-decoration:none" href="https://www.bilibili.com/video/BV1kR4y1t7xA?share_source=copy_web">4、跨端技术开发框架     ←<span style="font-size:15px;">点击查看</span></a>


<p><font color="grey"> 引出了 uniapp+HbuilderX+Serveless云开发（unicloud）</font></p>
<div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;">
<iframe style="position: absolute; width: 100%; 
height: 100%; left: 0; top: 0;" src="//player.bilibili.com/player.html?aid=336754306&bvid=BV1kR4y1t7xA&cid=445165506&page=1&high_quality=1&danmaku=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>
</div> 


<hr>
<a style="font-size:20px;text-decoration:none" href="https://www.bilibili.com/video/BV1or4y1k7jP?spm_id_from=333.999.0.0">5、传统基于服务器的后端开发    ←<span style="font-size:15px;">点击查看</span></a>


<p><font color="grey"> 啊对对对，就是我认识的后端开发+服务器部署</font></p>
<hr>
<a style="font-size:20px;text-decoration:none" href="https://www.bilibili.com/video/BV1hL4y1b7ih?spm_id_from=333.999.0.0">6、降低Vue开发门槛</a>，以及，开始<a style="font-size:20px;text-decoration:none" href="https://www.bilibili.com/video/BV1Cq4y1w7iY?spm_id_from=333.999.0.0">第一个Vue</a>吧 


<p><a style="text-decoration:none;color:green " href="https://uniapp.dcloud.io/">uniapp传送门    ←<span style="font-size:15px;">点击查看</span></a> </p>
<p>致谢：<strong>写代码的产品兔</strong></p>
<div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;">
<iframe style="position: absolute; width: 100%; 
height: 100%; left: 0; top: 0;" src="https://space.bilibili.com/385521986/video" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>
</div> ]]></content>
      <categories>
        <category>现在Web开发</category>
      </categories>
      <tags>
        <tag>serveless云开发</tag>
        <tag>vue</tag>
        <tag>uni-app</tag>
      </tags>
  </entry>
  <entry>
    <title>能用就行？</title>
    <url>/2021/06/26/%E8%83%BD%E7%94%A8%E5%B0%B1%E8%A1%8C%EF%BC%9F/</url>
    <content><![CDATA[<p>电脑能用就行吗？</p>
<p>虚拟机起不来，</p>
<p>内部不够大，还不能扩展，</p>
<p>我不用就行，进行简单的操作，日常需求也有很高的配置需求</p>
<p>那…</p>
<p>省钱最好</p>
<p>拷贝文件拷半天，</p>
<p>删除文件也要搜索很久，</p>
<p>每天都要面对这些问题，是每天，</p>
<p>那…</p>
<p>不是省钱的事情了，真的是在浪费时间了</p>
<p>试问，一个生产工具，达不到基本要求（Label：做好），只能实现（Label：做到），是不是该把他辞了？</p>
]]></content>
      <categories>
        <category>杂记</category>
      </categories>
  </entry>
  <entry>
    <title>现代杂记，边写边回忆</title>
    <url>/2021/05/07/%E7%8E%B0%E4%BB%A3%E6%9D%82%E8%AE%B0%EF%BC%8C%E8%BE%B9%E5%86%99%E8%BE%B9%E5%9B%9E%E5%BF%86/</url>
    <content><![CDATA[<hr>
<p>特殊行列式？<br>1）主对角线的：上三角=下三角=对角=主对角<br>2）副对角线的：上三角=下三角=对角=（-1）^n(n-1)/2 *副对角</p>
<hr>
<p>行列式性质？<br>行列互换，值不变，<br>行行（|列列）互换，变符号，<br>系数k*行列式 = 系数k与某一行相乘后的行列式<br>系数k与某一行相乘后的行列式+任意一行（除了这一行以外） 后的行列式值 = 原行列式值<br>某一行为0，值为0（每行表示一个空间向量，行列式二维表示面积，三维表示体积）<br>可拆（拆/加）性：拆/加一行，其他行不变，分出两个行列式</p>
<hr>
<p>行列式计算？<br>简单的二三阶，对角线法则（只适应二三阶）<br>分析行列特点，（常见：列和相等、行和相等-&gt;全家到一行，分离出k*1）<br>化简，凑0</p>
<hr>
<p>秩：最大无关向量组内的向量数</p>
<p>$$ 秩=\left{ \begin{aligned} 满秩  \ 不分行秩和列秩，划等号\  \end{aligned} \right. $$</p>
<hr>
<p>数乘矩阵</p>
<p>|KA|=K<sup>n</sup> |A| </p>
<hr>
<p>$$ 符号=\left{ \begin{aligned} A：矩阵A  \  |A|：行列式A \ ||α|| ：向量α的模 \ \frac{α}{ ||α|| }:α方向向量  \ \end{aligned} \right. $$</p>
<hr>
<p>可＋: 同型矩阵，同行同列</p>
<p>可×：m ×s  s×n</p>
<hr>
<p>转置： […]<sup>T</sup> 行向量 -&gt; 列向量</p>
<p>转置矩阵，按主对角线翻转</p>
<p>$$ \left[<br> \begin{matrix}<br>   a &amp; b &amp; c\<br>   d &amp; e &amp; f \<br>  \end{matrix}<br>\right]$$</p>
<p>​        ↓</p>
<p>$$ \left[<br> \begin{matrix}<br>   a &amp; d\<br>   b &amp; e\<br>   c &amp; f<br>  \end{matrix}<br>\right]$$</p>
<p>AB ≠ BA （AB）=B<sup>T</sup>A<sup>T</sup>   (A+B)<sup>T</sup> = A<sup>T</sup>+B<sup>T</sup> <sub>(张宇：穿脱原则)</sub></p>
<hr>
<p>逆矩阵？、伴随矩阵？</p>
<hr>
<p>标准正交向量组（规范正交基） 向量个数=维数</p>
<p> a<sub>i</sub><sup>T</sup>a<sub>j</sub> $$\left{ \begin{aligned} =0,&amp; i ≠  j  \ =1 &amp;i=j \  \end{aligned} \right. $$</p>
<hr>
<p>施密特标准正交化$$\left{ \begin{aligned} β1 =α1，&amp; i ≠  j  \ β2 =α2 - \frac{α2·β1}{α1·β1} β1， &amp;i=j \  \end{aligned} \right. $$</p>
<p>n1=$$\frac{β1}{||β1||}$$ 、n2=$$\frac{β2}{||β2||}$$</p>
<hr>
<p>对角矩阵、正交矩阵（AA<sup>T</sup>=E）</p>
<p>对称矩阵(关于主对角线对称，a<sub>ij</sub>=a<sub>ji</sub>)</p>
<p>分块矩阵高次幂</p>
<p><sub> $ \left[<br> \begin{matrix}<br>   A &amp; 0\<br>   0 &amp; B\<br>  \end{matrix}<br>\right]$</sub><sup>n</sup></p>
<p>​      ↓</p>
<p><sub> $ \left[<br> \begin{matrix}<br>   A^n &amp; 0\<br>   0 &amp; B^n\<br>  \end{matrix}<br>\right]$</sub></p>
<p>$$ \left[<br> \begin{matrix}<br>   a &amp; b &amp; c &amp; d &amp; e\<br>   f &amp; g &amp; h &amp; i &amp; j \<br>   k &amp; l &amp; m &amp; n &amp; o \<br>   p &amp; q &amp; r &amp; s &amp; t<br>  \end{matrix}<br>\right]$$</p>
<h3 id="以下经过个人处理后："><a href="#以下经过个人处理后：" class="headerlink" title="以下经过个人处理后："></a>以下经过个人处理后：</h3><div id="write" class><hr><p><span>特殊行列式？</span>
<span>1）主对角线的：上三角=下三角=对角=主对角</span>
<span>2）副对角线的：上三角=下三角=对角=（-1）^n(n-1)/2 *副对角</span></p><hr><p><span>行列式性质？</span>
<span>行列互换，值不变，</span>
<span>行行（|列列）互换，变符号，</span>
<span>系数k*行列式 = 系数k与某一行相乘后的行列式</span>
<span>系数k与某一行相乘后的行列式+任意一行（除了这一行以外） 后的行列式值 = 原行列式值</span>
<span>某一行为0，值为0（每行表示一个空间向量，行列式二维表示面积，三维表示体积）</span>
<span>可拆（拆/加）性：拆/加一行，其他行不变，分出两个行列式</span></p><hr><p><span>行列式计算？</span>
<span>简单的二三阶，对角线法则（只适应二三阶）</span>
<span>分析行列特点，（常见：列和相等、行和相等-&gt;全家到一行，分离出k*1）</span>
<span>化简，凑0</span></p><hr><p><span>秩：最大无关向量组内的向量数</span></p><p><span class="MathJax_SVG" tabindex="-1" style="font-size: 100%; display: inline-block;"><svg xmlns:xlink="http://www.w3.org/1999/xlink" width="28.235ex" height="5.846ex" viewbox="0 -1509.8 12156.8 2517" role="img" focusable="false" style="vertical-align: -2.339ex;"><defs><path stroke-width="0" id="E1-MJMAIN-3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"/><path stroke-width="0" id="E1-MJMAIN-7B" d="M434 -231Q434 -244 428 -250H410Q281 -250 230 -184Q225 -177 222 -172T217 -161T213 -148T211 -133T210 -111T209 -84T209 -47T209 0Q209 21 209 53Q208 142 204 153Q203 154 203 155Q189 191 153 211T82 231Q71 231 68 234T65 250T68 266T82 269Q116 269 152 289T203 345Q208 356 208 377T209 529V579Q209 634 215 656T244 698Q270 724 324 740Q361 748 377 749Q379 749 390 749T408 750H428Q434 744 434 732Q434 719 431 716Q429 713 415 713Q362 710 332 689T296 647Q291 634 291 499V417Q291 370 288 353T271 314Q240 271 184 255L170 250L184 245Q202 239 220 230T262 196T290 137Q291 131 291 1Q291 -134 296 -147Q306 -174 339 -192T415 -213Q429 -213 431 -216Q434 -219 434 -231Z"/><path stroke-width="0" id="E1-MJSZ3-7B" d="M618 -943L612 -949H582L568 -943Q472 -903 411 -841T332 -703Q327 -682 327 -653T325 -350Q324 -28 323 -18Q317 24 301 61T264 124T221 171T179 205T147 225T132 234Q130 238 130 250Q130 255 130 258T131 264T132 267T134 269T139 272T144 275Q207 308 256 367Q310 436 323 519Q324 529 325 851Q326 1124 326 1154T332 1205Q369 1358 566 1443L582 1450H612L618 1444V1429Q618 1413 616 1411L608 1406Q599 1402 585 1393T552 1372T515 1343T479 1305T449 1257T429 1200Q425 1180 425 1152T423 851Q422 579 422 549T416 498Q407 459 388 424T346 364T297 318T250 284T214 264T197 254L188 251L205 242Q290 200 345 138T416 3Q421 -18 421 -48T423 -349Q423 -397 423 -472Q424 -677 428 -694Q429 -697 429 -699Q434 -722 443 -743T465 -782T491 -816T519 -845T548 -868T574 -886T595 -899T610 -908L616 -910Q618 -912 618 -928V-943Z"/></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><text font-family="STIXGeneral, 'PingFang SC', serif" stroke="none" transform="scale(50.259) matrix(1 0 0 -1 0 0)">秩</text><use xlink:href="#E1-MJMAIN-3D" x="1096" y="0"/><g transform="translate(2152,0)"><use xlink:href="#E1-MJSZ3-7B"/><g transform="translate(917,0)"><g transform="translate(-15,0)"><g transform="translate(7297,600)"><text font-family="STIXGeneral, 'PingFang SC', serif" stroke="none" transform="scale(50.259) matrix(1 0 0 -1 0 0)">满</text><g transform="translate(819,0)"><text font-family="STIXGeneral, 'PingFang SC', serif" stroke="none" transform="scale(50.259) matrix(1 0 0 -1 0 0)">秩</text></g></g><g transform="translate(0,-700)"><text font-family="STIXGeneral, 'PingFang SC', serif" stroke="none" transform="scale(50.259) matrix(1 0 0 -1 0 0)">不</text><g transform="translate(819,0)"><text font-family="STIXGeneral, 'PingFang SC', serif" stroke="none" transform="scale(50.259) matrix(1 0 0 -1 0 0)">分</text></g><g transform="translate(1638,0)"><text font-family="STIXGeneral, 'PingFang SC', serif" stroke="none" transform="scale(50.259) matrix(1 0 0 -1 0 0)">行</text></g><g transform="translate(2457,0)"><text font-family="STIXGeneral, 'PingFang SC', serif" stroke="none" transform="scale(50.259) matrix(1 0 0 -1 0 0)">秩</text></g><g transform="translate(3276,0)"><text font-family="STIXGeneral, 'PingFang SC', serif" stroke="none" transform="scale(50.259) matrix(1 0 0 -1 0 0)">和</text></g><g transform="translate(4080,0)"><text font-family="STIXGeneral, 'PingFang SC', serif" stroke="none" transform="scale(50.259) matrix(1 0 0 -1 0 0)">列</text></g><g transform="translate(4884,0)"><text font-family="STIXGeneral, 'PingFang SC', serif" stroke="none" transform="scale(50.259) matrix(1 0 0 -1 0 0)">秩</text></g><g transform="translate(5703,0)"><text font-family="STIXGeneral, 'PingFang SC', serif" stroke="none" transform="scale(50.259) matrix(1 0 0 -1 0 0)">，</text></g><g transform="translate(6507,0)"><text font-family="STIXGeneral, 'PingFang SC', serif" stroke="none" transform="scale(50.259) matrix(1 0 0 -1 0 0)">划</text></g><g transform="translate(7311,0)"><text font-family="STIXGeneral, 'PingFang SC', serif" stroke="none" transform="scale(50.259) matrix(1 0 0 -1 0 0)">等</text></g><g transform="translate(8130,0)"><text font-family="STIXGeneral, 'PingFang SC', serif" stroke="none" transform="scale(50.259) matrix(1 0 0 -1 0 0)">号</text></g></g></g></g></g></g></svg></span><script type="math/tex"> 秩=\left\{ \begin{aligned} 满秩  \\ 不分行秩和列秩，划等号\\  \end{aligned} \right. </script></p><hr><p><span>数乘矩阵</span></p><p><span>|KA|=K</span><sup><span>n</span></sup><span> |A| </span></p><hr><p><span class="MathJax_SVG" tabindex="-1" style="font-size: 100%; display: inline-block;"><svg xmlns:xlink="http://www.w3.org/1999/xlink" width="25.541ex" height="14.484ex" viewbox="0 -3369.4 10996.8 6236.1" role="img" focusable="false" style="vertical-align: -6.658ex;"><defs><path stroke-width="0" id="E2-MJMAIN-3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"/><path stroke-width="0" id="E2-MJMAIN-7B" d="M434 -231Q434 -244 428 -250H410Q281 -250 230 -184Q225 -177 222 -172T217 -161T213 -148T211 -133T210 -111T209 -84T209 -47T209 0Q209 21 209 53Q208 142 204 153Q203 154 203 155Q189 191 153 211T82 231Q71 231 68 234T65 250T68 266T82 269Q116 269 152 289T203 345Q208 356 208 377T209 529V579Q209 634 215 656T244 698Q270 724 324 740Q361 748 377 749Q379 749 390 749T408 750H428Q434 744 434 732Q434 719 431 716Q429 713 415 713Q362 710 332 689T296 647Q291 634 291 499V417Q291 370 288 353T271 314Q240 271 184 255L170 250L184 245Q202 239 220 230T262 196T290 137Q291 131 291 1Q291 -134 296 -147Q306 -174 339 -192T415 -213Q429 -213 431 -216Q434 -219 434 -231Z"/><path stroke-width="0" id="E2-MJMATHI-41" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z"/><path stroke-width="0" id="E2-MJMAIN-7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"/><path stroke-width="0" id="E2-MJMATHI-3B1" d="M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z"/><path stroke-width="0" id="E2-MJMAIN-3A" d="M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"/><path stroke-width="0" id="E2-MJSZ4-23A7" d="M712 899L718 893V876V865Q718 854 704 846Q627 793 577 710T510 525Q510 524 509 521Q505 493 504 349Q504 345 504 334Q504 277 504 240Q504 -2 503 -4Q502 -8 494 -9T444 -10Q392 -10 390 -9Q387 -8 386 -5Q384 5 384 230Q384 262 384 312T383 382Q383 481 392 535T434 656Q510 806 664 892L677 899H712Z"/><path stroke-width="0" id="E2-MJSZ4-23A9" d="M718 -893L712 -899H677L666 -893Q542 -825 468 -714T385 -476Q384 -466 384 -282Q384 3 385 5L389 9Q392 10 444 10Q486 10 494 9T503 4Q504 2 504 -239V-310V-366Q504 -470 508 -513T530 -609Q546 -657 569 -698T617 -767T661 -812T699 -843T717 -856T718 -876V-893Z"/><path stroke-width="0" id="E2-MJSZ4-23A8" d="M389 1159Q391 1160 455 1160Q496 1160 498 1159Q501 1158 502 1155Q504 1145 504 924Q504 691 503 682Q494 549 425 439T243 259L229 250L243 241Q349 175 421 66T503 -182Q504 -191 504 -424Q504 -600 504 -629T499 -659H498Q496 -660 444 -660T390 -659Q387 -658 386 -655Q384 -645 384 -425V-282Q384 -176 377 -116T342 10Q325 54 301 92T255 155T214 196T183 222T171 232Q170 233 170 250T171 268Q171 269 191 284T240 331T300 407T354 524T383 679Q384 691 384 925Q384 1152 385 1155L389 1159Z"/><path stroke-width="0" id="E2-MJSZ4-23AA" d="M384 150V266Q384 304 389 309Q391 310 455 310Q496 310 498 309Q502 308 503 298Q504 283 504 150Q504 32 504 12T499 -9H498Q496 -10 444 -10T390 -9Q386 -8 385 2Q384 17 384 150Z"/></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><text font-family="STIXGeneral, 'PingFang SC', serif" stroke="none" transform="scale(50.259) matrix(1 0 0 -1 0 0)">符</text><g transform="translate(819,0)"><text font-family="STIXGeneral, 'PingFang SC', serif" stroke="none" transform="scale(50.259) matrix(1 0 0 -1 0 0)">号</text></g><use xlink:href="#E2-MJMAIN-3D" x="1900" y="0"/><g transform="translate(2956,0)"><g transform="translate(0,3290)"><use xlink:href="#E2-MJSZ4-23A7" x="0" y="-899"/><g transform="translate(0,-2139.278713886187) scale(1,4.129931335116732)"><use xlink:href="#E2-MJSZ4-23AA"/></g><use xlink:href="#E2-MJSZ4-23A8" x="0" y="-3291"/><g transform="translate(0,-5180.856741123541) scale(1,4.129931335116732)"><use xlink:href="#E2-MJSZ4-23AA"/></g><use xlink:href="#E2-MJSZ4-23A9" x="0" y="-5183"/></g><g transform="translate(1056,0)"><g transform="translate(-15,0)"><g transform="translate(2889,2490)"><use xlink:href="#E2-MJMATHI-41" x="0" y="0"/><g transform="translate(750,0)"><text font-family="STIXGeneral, 'PingFang SC', serif" stroke="none" transform="scale(50.259) matrix(1 0 0 -1 0 0)">：</text></g><g transform="translate(1554,0)"><text font-family="STIXGeneral, 'PingFang SC', serif" stroke="none" transform="scale(50.259) matrix(1 0 0 -1 0 0)">矩</text></g><g transform="translate(2373,0)"><text font-family="STIXGeneral, 'PingFang SC', serif" stroke="none" transform="scale(50.259) matrix(1 0 0 -1 0 0)">阵</text></g><use xlink:href="#E2-MJMATHI-41" x="3192" y="0"/></g><g transform="translate(1529,1190)"><use xlink:href="#E2-MJMAIN-7C" x="0" y="0"/><use xlink:href="#E2-MJMATHI-41" x="278" y="0"/><use xlink:href="#E2-MJMAIN-7C" x="1028" y="0"/><g transform="translate(1306,0)"><text font-family="STIXGeneral, 'PingFang SC', serif" stroke="none" transform="scale(50.259) matrix(1 0 0 -1 0 0)">：</text></g><g transform="translate(2110,0)"><text font-family="STIXGeneral, 'PingFang SC', serif" stroke="none" transform="scale(50.259) matrix(1 0 0 -1 0 0)">行</text></g><g transform="translate(2929,0)"><text font-family="STIXGeneral, 'PingFang SC', serif" stroke="none" transform="scale(50.259) matrix(1 0 0 -1 0 0)">列</text></g><g transform="translate(3733,0)"><text font-family="STIXGeneral, 'PingFang SC', serif" stroke="none" transform="scale(50.259) matrix(1 0 0 -1 0 0)">式</text></g><use xlink:href="#E2-MJMATHI-41" x="4552" y="0"/></g><g transform="translate(389,-159)"><use xlink:href="#E2-MJMAIN-7C" x="0" y="0"/><use xlink:href="#E2-MJMAIN-7C" x="278" y="0"/><use xlink:href="#E2-MJMATHI-3B1" x="556" y="0"/><use xlink:href="#E2-MJMAIN-7C" x="1196" y="0"/><use xlink:href="#E2-MJMAIN-7C" x="1474" y="0"/><g transform="translate(1752,0)"><text font-family="STIXGeneral, 'PingFang SC', serif" stroke="none" transform="scale(50.259) matrix(1 0 0 -1 0 0)">：</text></g><g transform="translate(2556,0)"><text font-family="STIXGeneral, 'PingFang SC', serif" stroke="none" transform="scale(50.259) matrix(1 0 0 -1 0 0)">向</text></g><g transform="translate(3360,0)"><text font-family="STIXGeneral, 'PingFang SC', serif" stroke="none" transform="scale(50.259) matrix(1 0 0 -1 0 0)">量</text></g><use xlink:href="#E2-MJMATHI-3B1" x="4179" y="0"/><g transform="translate(4819,0)"><text font-family="STIXGeneral, 'PingFang SC', serif" stroke="none" transform="scale(50.259) matrix(1 0 0 -1 0 0)">的</text></g><g transform="translate(5623,0)"><text font-family="STIXGeneral, 'PingFang SC', serif" stroke="none" transform="scale(50.259) matrix(1 0 0 -1 0 0)">模</text></g></g><g transform="translate(0,-1826)"><g transform="translate(120,0)"><rect stroke="none" width="1872" height="60" x="0" y="220"/><use xlink:href="#E2-MJMATHI-3B1" x="616" y="676"/><g transform="translate(60,-716)"><use xlink:href="#E2-MJMAIN-7C" x="0" y="0"/><use xlink:href="#E2-MJMAIN-7C" x="278" y="0"/><use xlink:href="#E2-MJMATHI-3B1" x="556" y="0"/><use xlink:href="#E2-MJMAIN-7C" x="1196" y="0"/><use xlink:href="#E2-MJMAIN-7C" x="1474" y="0"/></g></g><use xlink:href="#E2-MJMAIN-3A" x="2389" y="0"/><use xlink:href="#E2-MJMATHI-3B1" x="2945" y="0"/><g transform="translate(3585,0)"><text font-family="STIXGeneral, 'PingFang SC', serif" stroke="none" transform="scale(50.259) matrix(1 0 0 -1 0 0)">方</text></g><g transform="translate(4404,0)"><text font-family="STIXGeneral, 'PingFang SC', serif" stroke="none" transform="scale(50.259) matrix(1 0 0 -1 0 0)">向</text></g><g transform="translate(5208,0)"><text font-family="STIXGeneral, 'PingFang SC', serif" stroke="none" transform="scale(50.259) matrix(1 0 0 -1 0 0)">向</text></g><g transform="translate(6012,0)"><text font-family="STIXGeneral, 'PingFang SC', serif" stroke="none" transform="scale(50.259) matrix(1 0 0 -1 0 0)">量</text></g></g></g></g></g></g></svg></span><script type="math/tex"> 符号=\left\{ \begin{aligned} A：矩阵A  \\  |A|：行列式A \\ ||α|| ：向量α的模 \\ \frac{α}{ ||α|| }:α方向向量  \\ \end{aligned} \right. </script></p><hr><p><span>可＋: 同型矩阵，同行同列</span></p><p><span>可×：m ×s  s×n</span></p><hr><p><span>转置： […]</span><sup><span>T</span></sup><span> 行向量 -&gt; 列向量</span></p><p><span>转置矩阵，按主对角线翻转</span></p><p><span class="MathJax_SVG" tabindex="-1" style="font-size: 100%; display: inline-block;"><svg xmlns:xlink="http://www.w3.org/1999/xlink" width="11.427ex" height="5.846ex" viewbox="0 -1509.8 4920.1 2517" role="img" focusable="false" style="vertical-align: -2.339ex;"><defs><path stroke-width="0" id="E3-MJMAIN-5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"/><path stroke-width="0" id="E3-MJMATHI-61" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"/><path stroke-width="0" id="E3-MJMATHI-62" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"/><path stroke-width="0" id="E3-MJMATHI-63" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"/><path stroke-width="0" id="E3-MJMATHI-64" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"/><path stroke-width="0" id="E3-MJMATHI-65" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"/><path stroke-width="0" id="E3-MJMATHI-66" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"/><path stroke-width="0" id="E3-MJMAIN-5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"/><path stroke-width="0" id="E3-MJSZ3-5B" d="M247 -949V1450H516V1388H309V-887H516V-949H247Z"/><path stroke-width="0" id="E3-MJSZ3-5D" d="M11 1388V1450H280V-949H11V-887H218V1388H11Z"/></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><use xlink:href="#E3-MJSZ3-5B"/><g transform="translate(695,0)"><g transform="translate(-15,0)"><use xlink:href="#E3-MJMATHI-61" x="0" y="652"/><use xlink:href="#E3-MJMATHI-64" x="3" y="-748"/></g><g transform="translate(1514,0)"><use xlink:href="#E3-MJMATHI-62" x="18" y="652"/><use xlink:href="#E3-MJMATHI-65" x="0" y="-748"/></g><g transform="translate(2980,0)"><use xlink:href="#E3-MJMATHI-63" x="58" y="652"/><use xlink:href="#E3-MJMATHI-66" x="0" y="-748"/></g></g><use xlink:href="#E3-MJSZ3-5D" x="4392" y="-1"/></g></svg></span><script type="math/tex"> \left[
 \begin{matrix}
   a & b & c\\
   d & e & f \\
  \end{matrix} 
\right]</script></p><p><span>        ↓</span></p><p><span class="MathJax_SVG" tabindex="-1" style="font-size: 100%; display: inline-block;"><svg xmlns:xlink="http://www.w3.org/1999/xlink" width="8.668ex" height="9.114ex" viewbox="0 -2213.4 3732.1 3924.2" role="img" focusable="false" style="vertical-align: -3.974ex;"><defs><path stroke-width="0" id="E4-MJMAIN-5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"/><path stroke-width="0" id="E4-MJMATHI-61" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"/><path stroke-width="0" id="E4-MJMATHI-64" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"/><path stroke-width="0" id="E4-MJMATHI-62" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"/><path stroke-width="0" id="E4-MJMATHI-65" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"/><path stroke-width="0" id="E4-MJMATHI-63" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"/><path stroke-width="0" id="E4-MJMATHI-66" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"/><path stroke-width="0" id="E4-MJMAIN-5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"/><path stroke-width="0" id="E4-MJSZ4-23A1" d="M319 -645V1154H666V1070H403V-645H319Z"/><path stroke-width="0" id="E4-MJSZ4-23A3" d="M319 -644V1155H403V-560H666V-644H319Z"/><path stroke-width="0" id="E4-MJSZ4-23A2" d="M319 0V602H403V0H319Z"/><path stroke-width="0" id="E4-MJSZ4-23A4" d="M0 1070V1154H347V-645H263V1070H0Z"/><path stroke-width="0" id="E4-MJSZ4-23A6" d="M263 -560V1155H347V-644H0V-560H263Z"/><path stroke-width="0" id="E4-MJSZ4-23A5" d="M263 0V602H347V0H263Z"/></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g transform="translate(0,2152)"><use xlink:href="#E4-MJSZ4-23A1" x="0" y="-1154"/><g transform="translate(0,-2056) scale(1,0.5099667774086378)"><use xlink:href="#E4-MJSZ4-23A2"/></g><use xlink:href="#E4-MJSZ4-23A3" x="0" y="-3161"/></g><g transform="translate(834,0)"><g transform="translate(-15,0)"><use xlink:href="#E4-MJMATHI-61" x="0" y="1352"/><use xlink:href="#E4-MJMATHI-62" x="50" y="-48"/><use xlink:href="#E4-MJMATHI-63" x="48" y="-1448"/></g><g transform="translate(1514,0)"><use xlink:href="#E4-MJMATHI-64" x="13" y="1352"/><use xlink:href="#E4-MJMATHI-65" x="42" y="-48"/><use xlink:href="#E4-MJMATHI-66" x="0" y="-1448"/></g></g><g transform="translate(3065,2152)"><use xlink:href="#E4-MJSZ4-23A4" x="0" y="-1154"/><g transform="translate(0,-2056) scale(1,0.5099667774086378)"><use xlink:href="#E4-MJSZ4-23A5"/></g><use xlink:href="#E4-MJSZ4-23A6" x="0" y="-3161"/></g></g></svg></span><script type="math/tex"> \left[
 \begin{matrix}
   a & d\\
   b & e\\
   c & f
  \end{matrix} 
\right]</script></p><p><span>AB ≠ BA （AB）=B</span><sup><span>T</span></sup><span>A</span><sup><span>T</span></sup><span>   (A+B)</span><sup><span>T</span></sup><span> = A</span><sup><span>T</span></sup><span>+B</span><sup><span>T</span></sup><span> </span><sub><span>(张宇：穿脱原则)</span></sub></p><hr><p><span>逆矩阵？、伴随矩阵？</span></p><hr><p><span>标准正交向量组（规范正交基） 向量个数=维数</span></p><p><span> a</span><sub><span>i</span></sub><sup><span>T</span></sup><span>a</span><sub><span>j</span></sub><span> </span><span class="MathJax_SVG" tabindex="-1" style="font-size: 100%; display: inline-block;"><svg xmlns:xlink="http://www.w3.org/1999/xlink" width="11.598ex" height="5.846ex" viewbox="0 -1509.8 4993.4 2517" role="img" focusable="false" style="vertical-align: -2.339ex;"><defs><path stroke-width="0" id="E5-MJMAIN-7B" d="M434 -231Q434 -244 428 -250H410Q281 -250 230 -184Q225 -177 222 -172T217 -161T213 -148T211 -133T210 -111T209 -84T209 -47T209 0Q209 21 209 53Q208 142 204 153Q203 154 203 155Q189 191 153 211T82 231Q71 231 68 234T65 250T68 266T82 269Q116 269 152 289T203 345Q208 356 208 377T209 529V579Q209 634 215 656T244 698Q270 724 324 740Q361 748 377 749Q379 749 390 749T408 750H428Q434 744 434 732Q434 719 431 716Q429 713 415 713Q362 710 332 689T296 647Q291 634 291 499V417Q291 370 288 353T271 314Q240 271 184 255L170 250L184 245Q202 239 220 230T262 196T290 137Q291 131 291 1Q291 -134 296 -147Q306 -174 339 -192T415 -213Q429 -213 431 -216Q434 -219 434 -231Z"/><path stroke-width="0" id="E5-MJMAIN-3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"/><path stroke-width="0" id="E5-MJMAIN-30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"/><path stroke-width="0" id="E5-MJMAIN-2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"/><path stroke-width="0" id="E5-MJMATHI-69" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"/><path stroke-width="0" id="E5-MJMAIN-2260" d="M166 -215T159 -215T147 -212T141 -204T139 -197Q139 -190 144 -183L306 133H70Q56 140 56 153Q56 168 72 173H327L406 327H72Q56 332 56 347Q56 360 70 367H426Q597 702 602 707Q605 716 618 716Q625 716 630 712T636 703T638 696Q638 692 471 367H707Q722 359 722 347Q722 336 708 328L451 327L371 173H708Q722 163 722 153Q722 140 707 133H351Q175 -210 170 -212Q166 -215 159 -215Z"/><path stroke-width="0" id="E5-MJMATHI-6A" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"/><path stroke-width="0" id="E5-MJMAIN-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"/><path stroke-width="0" id="E5-MJSZ3-7B" d="M618 -943L612 -949H582L568 -943Q472 -903 411 -841T332 -703Q327 -682 327 -653T325 -350Q324 -28 323 -18Q317 24 301 61T264 124T221 171T179 205T147 225T132 234Q130 238 130 250Q130 255 130 258T131 264T132 267T134 269T139 272T144 275Q207 308 256 367Q310 436 323 519Q324 529 325 851Q326 1124 326 1154T332 1205Q369 1358 566 1443L582 1450H612L618 1444V1429Q618 1413 616 1411L608 1406Q599 1402 585 1393T552 1372T515 1343T479 1305T449 1257T429 1200Q425 1180 425 1152T423 851Q422 579 422 549T416 498Q407 459 388 424T346 364T297 318T250 284T214 264T197 254L188 251L205 242Q290 200 345 138T416 3Q421 -18 421 -48T423 -349Q423 -397 423 -472Q424 -677 428 -694Q429 -697 429 -699Q434 -722 443 -743T465 -782T491 -816T519 -845T548 -868T574 -886T595 -899T610 -908L616 -910Q618 -912 618 -928V-943Z"/></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><use xlink:href="#E5-MJSZ3-7B"/><g transform="translate(917,0)"><g transform="translate(-15,0)"><g transform="translate(0,609)"><use xlink:href="#E5-MJMAIN-3D" x="0" y="0"/><use xlink:href="#E5-MJMAIN-30" x="1055" y="0"/><use xlink:href="#E5-MJMAIN-2C" x="1555" y="0"/></g><g transform="translate(278,-706)"><use xlink:href="#E5-MJMAIN-3D" x="0" y="0"/><use xlink:href="#E5-MJMAIN-31" x="1055" y="0"/></g></g><g transform="translate(1818,0)"><g transform="translate(0,609)"><use xlink:href="#E5-MJMATHI-69" x="0" y="0"/><use xlink:href="#E5-MJMAIN-2260" x="622" y="0"/><use xlink:href="#E5-MJMATHI-6A" x="1678" y="0"/></g><g transform="translate(0,-706)"><use xlink:href="#E5-MJMATHI-69" x="0" y="0"/><use xlink:href="#E5-MJMAIN-3D" x="622" y="0"/><use xlink:href="#E5-MJMATHI-6A" x="1678" y="0"/></g></g></g></g></svg></span><script type="math/tex">\left\{ \begin{aligned} =0,& i ≠  j  \\ =1 &i=j \\  \end{aligned} \right. </script></p><hr><p><span>施密特标准正交化</span><span class="MathJax_SVG" tabindex="-1" style="font-size: 100%; display: inline-block;"><svg xmlns:xlink="http://www.w3.org/1999/xlink" width="30.703ex" height="8.647ex" viewbox="0 -2112.9 13219.2 3723.2" role="img" focusable="false" style="vertical-align: -3.573ex; margin-bottom: -0.167ex;"><defs><path stroke-width="0" id="E6-MJMAIN-7B" d="M434 -231Q434 -244 428 -250H410Q281 -250 230 -184Q225 -177 222 -172T217 -161T213 -148T211 -133T210 -111T209 -84T209 -47T209 0Q209 21 209 53Q208 142 204 153Q203 154 203 155Q189 191 153 211T82 231Q71 231 68 234T65 250T68 266T82 269Q116 269 152 289T203 345Q208 356 208 377T209 529V579Q209 634 215 656T244 698Q270 724 324 740Q361 748 377 749Q379 749 390 749T408 750H428Q434 744 434 732Q434 719 431 716Q429 713 415 713Q362 710 332 689T296 647Q291 634 291 499V417Q291 370 288 353T271 314Q240 271 184 255L170 250L184 245Q202 239 220 230T262 196T290 137Q291 131 291 1Q291 -134 296 -147Q306 -174 339 -192T415 -213Q429 -213 431 -216Q434 -219 434 -231Z"/><path stroke-width="0" id="E6-MJMATHI-3B2" d="M29 -194Q23 -188 23 -186Q23 -183 102 134T186 465Q208 533 243 584T309 658Q365 705 429 705H431Q493 705 533 667T573 570Q573 465 469 396L482 383Q533 332 533 252Q533 139 448 65T257 -10Q227 -10 203 -2T165 17T143 40T131 59T126 65L62 -188Q60 -194 42 -194H29ZM353 431Q392 431 427 419L432 422Q436 426 439 429T449 439T461 453T472 471T484 495T493 524T501 560Q503 569 503 593Q503 611 502 616Q487 667 426 667Q384 667 347 643T286 582T247 514T224 455Q219 439 186 308T152 168Q151 163 151 147Q151 99 173 68Q204 26 260 26Q302 26 349 51T425 137Q441 171 449 214T457 279Q457 337 422 372Q380 358 347 358H337Q258 358 258 389Q258 396 261 403Q275 431 353 431Z"/><path stroke-width="0" id="E6-MJMAIN-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"/><path stroke-width="0" id="E6-MJMAIN-3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"/><path stroke-width="0" id="E6-MJMATHI-3B1" d="M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z"/><path stroke-width="0" id="E6-MJMATHI-69" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"/><path stroke-width="0" id="E6-MJMAIN-2260" d="M166 -215T159 -215T147 -212T141 -204T139 -197Q139 -190 144 -183L306 133H70Q56 140 56 153Q56 168 72 173H327L406 327H72Q56 332 56 347Q56 360 70 367H426Q597 702 602 707Q605 716 618 716Q625 716 630 712T636 703T638 696Q638 692 471 367H707Q722 359 722 347Q722 336 708 328L451 327L371 173H708Q722 163 722 153Q722 140 707 133H351Q175 -210 170 -212Q166 -215 159 -215Z"/><path stroke-width="0" id="E6-MJMATHI-6A" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"/><path stroke-width="0" id="E6-MJMAIN-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/><path stroke-width="0" id="E6-MJMAIN-2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"/><path stroke-width="0" id="E6-MJMAIN-22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"/><path stroke-width="0" id="E6-MJSZ4-23A7" d="M712 899L718 893V876V865Q718 854 704 846Q627 793 577 710T510 525Q510 524 509 521Q505 493 504 349Q504 345 504 334Q504 277 504 240Q504 -2 503 -4Q502 -8 494 -9T444 -10Q392 -10 390 -9Q387 -8 386 -5Q384 5 384 230Q384 262 384 312T383 382Q383 481 392 535T434 656Q510 806 664 892L677 899H712Z"/><path stroke-width="0" id="E6-MJSZ4-23A9" d="M718 -893L712 -899H677L666 -893Q542 -825 468 -714T385 -476Q384 -466 384 -282Q384 3 385 5L389 9Q392 10 444 10Q486 10 494 9T503 4Q504 2 504 -239V-310V-366Q504 -470 508 -513T530 -609Q546 -657 569 -698T617 -767T661 -812T699 -843T717 -856T718 -876V-893Z"/><path stroke-width="0" id="E6-MJSZ4-23A8" d="M389 1159Q391 1160 455 1160Q496 1160 498 1159Q501 1158 502 1155Q504 1145 504 924Q504 691 503 682Q494 549 425 439T243 259L229 250L243 241Q349 175 421 66T503 -182Q504 -191 504 -424Q504 -600 504 -629T499 -659H498Q496 -660 444 -660T390 -659Q387 -658 386 -655Q384 -645 384 -425V-282Q384 -176 377 -116T342 10Q325 54 301 92T255 155T214 196T183 222T171 232Q170 233 170 250T171 268Q171 269 191 284T240 331T300 407T354 524T383 679Q384 691 384 925Q384 1152 385 1155L389 1159Z"/></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g transform="translate(0,2038)"><use xlink:href="#E6-MJSZ4-23A7" x="0" y="-899"/><use xlink:href="#E6-MJSZ4-23A8" x="0" y="-2039"/><use xlink:href="#E6-MJSZ4-23A9" x="0" y="-2678"/></g><g transform="translate(1056,0)"><g transform="translate(-15,0)"><g transform="translate(5576,1238)"><use xlink:href="#E6-MJMATHI-3B2" x="0" y="0"/><use xlink:href="#E6-MJMAIN-31" x="566" y="0"/><use xlink:href="#E6-MJMAIN-3D" x="1343" y="0"/><use xlink:href="#E6-MJMATHI-3B1" x="2399" y="0"/><use xlink:href="#E6-MJMAIN-31" x="3039" y="0"/><g transform="translate(3539,0)"><text font-family="STIXGeneral, 'PingFang SC', serif" stroke="none" transform="scale(50.259) matrix(1 0 0 -1 0 0)">，</text></g></g><g transform="translate(0,-659)"><use xlink:href="#E6-MJMATHI-3B2" x="0" y="0"/><use xlink:href="#E6-MJMAIN-32" x="566" y="0"/><use xlink:href="#E6-MJMAIN-3D" x="1343" y="0"/><use xlink:href="#E6-MJMATHI-3B1" x="2399" y="0"/><use xlink:href="#E6-MJMAIN-32" x="3039" y="0"/><use xlink:href="#E6-MJMAIN-2212" x="3761" y="0"/><g transform="translate(4539,0)"><g transform="translate(342,0)"><rect stroke="none" width="3048" height="60" x="0" y="220"/><g transform="translate(60,676)"><use xlink:href="#E6-MJMATHI-3B1" x="0" y="0"/><use xlink:href="#E6-MJMAIN-32" x="640" y="0"/><use xlink:href="#E6-MJMAIN-22C5" x="1362" y="0"/><use xlink:href="#E6-MJMATHI-3B2" x="1862" y="0"/><use xlink:href="#E6-MJMAIN-31" x="2428" y="0"/></g><g transform="translate(60,-686)"><use xlink:href="#E6-MJMATHI-3B1" x="0" y="0"/><use xlink:href="#E6-MJMAIN-31" x="640" y="0"/><use xlink:href="#E6-MJMAIN-22C5" x="1362" y="0"/><use xlink:href="#E6-MJMATHI-3B2" x="1862" y="0"/><use xlink:href="#E6-MJMAIN-31" x="2428" y="0"/></g></g></g><use xlink:href="#E6-MJMATHI-3B2" x="8050" y="0"/><use xlink:href="#E6-MJMAIN-31" x="8616" y="0"/><g transform="translate(9116,0)"><text font-family="STIXGeneral, 'PingFang SC', serif" stroke="none" transform="scale(50.259) matrix(1 0 0 -1 0 0)">，</text></g></g></g><g transform="translate(9905,0)"><g transform="translate(0,1238)"><use xlink:href="#E6-MJMATHI-69" x="0" y="0"/><use xlink:href="#E6-MJMAIN-2260" x="622" y="0"/><use xlink:href="#E6-MJMATHI-6A" x="1678" y="0"/></g><g transform="translate(0,-659)"><use xlink:href="#E6-MJMATHI-69" x="0" y="0"/><use xlink:href="#E6-MJMAIN-3D" x="622" y="0"/><use xlink:href="#E6-MJMATHI-6A" x="1678" y="0"/></g></g></g></g></svg></span><script type="math/tex">\left\{ \begin{aligned} β1 =α1，& i ≠  j  \\ β2 =α2 - \frac{α2·β1}{α1·β1} β1， &i=j \\  \end{aligned} \right. </script></p><p><span>n1=</span><span class="MathJax_SVG" tabindex="-1" style="font-size: 100%; display: inline-block;"><svg xmlns:xlink="http://www.w3.org/1999/xlink" width="4.413ex" height="4.212ex" viewbox="0 -1107.7 1900.1 1813.3" role="img" focusable="false" style="vertical-align: -1.639ex;"><defs><path stroke-width="0" id="E7-MJMATHI-3B2" d="M29 -194Q23 -188 23 -186Q23 -183 102 134T186 465Q208 533 243 584T309 658Q365 705 429 705H431Q493 705 533 667T573 570Q573 465 469 396L482 383Q533 332 533 252Q533 139 448 65T257 -10Q227 -10 203 -2T165 17T143 40T131 59T126 65L62 -188Q60 -194 42 -194H29ZM353 431Q392 431 427 419L432 422Q436 426 439 429T449 439T461 453T472 471T484 495T493 524T501 560Q503 569 503 593Q503 611 502 616Q487 667 426 667Q384 667 347 643T286 582T247 514T224 455Q219 439 186 308T152 168Q151 163 151 147Q151 99 173 68Q204 26 260 26Q302 26 349 51T425 137Q441 171 449 214T457 279Q457 337 422 372Q380 358 347 358H337Q258 358 258 389Q258 396 261 403Q275 431 353 431Z"/><path stroke-width="0" id="E7-MJMAIN-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"/><path stroke-width="0" id="E7-MJMAIN-7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"/></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g transform="translate(120,0)"><rect stroke="none" width="1660" height="60" x="0" y="220"/><g transform="translate(453,541)"><use transform="scale(0.707)" xlink:href="#E7-MJMATHI-3B2" x="0" y="0"/><use transform="scale(0.707)" xlink:href="#E7-MJMAIN-31" x="566" y="0"/></g><g transform="translate(60,-435)"><use transform="scale(0.707)" xlink:href="#E7-MJMAIN-7C" x="0" y="0"/><use transform="scale(0.707)" xlink:href="#E7-MJMAIN-7C" x="278" y="0"/><use transform="scale(0.707)" xlink:href="#E7-MJMATHI-3B2" x="556" y="0"/><use transform="scale(0.707)" xlink:href="#E7-MJMAIN-31" x="1122" y="0"/><use transform="scale(0.707)" xlink:href="#E7-MJMAIN-7C" x="1621" y="0"/><use transform="scale(0.707)" xlink:href="#E7-MJMAIN-7C" x="1899" y="0"/></g></g></g></svg></span><script type="math/tex">\frac{β1}{||β1||}</script><span> 、n2=</span><span class="MathJax_SVG" tabindex="-1" style="font-size: 100%; display: inline-block;"><svg xmlns:xlink="http://www.w3.org/1999/xlink" width="4.413ex" height="4.22ex" viewbox="0 -1109.9 1900.1 1816.9" role="img" focusable="false" style="vertical-align: -1.642ex;"><defs><path stroke-width="0" id="E8-MJMATHI-3B2" d="M29 -194Q23 -188 23 -186Q23 -183 102 134T186 465Q208 533 243 584T309 658Q365 705 429 705H431Q493 705 533 667T573 570Q573 465 469 396L482 383Q533 332 533 252Q533 139 448 65T257 -10Q227 -10 203 -2T165 17T143 40T131 59T126 65L62 -188Q60 -194 42 -194H29ZM353 431Q392 431 427 419L432 422Q436 426 439 429T449 439T461 453T472 471T484 495T493 524T501 560Q503 569 503 593Q503 611 502 616Q487 667 426 667Q384 667 347 643T286 582T247 514T224 455Q219 439 186 308T152 168Q151 163 151 147Q151 99 173 68Q204 26 260 26Q302 26 349 51T425 137Q441 171 449 214T457 279Q457 337 422 372Q380 358 347 358H337Q258 358 258 389Q258 396 261 403Q275 431 353 431Z"/><path stroke-width="0" id="E8-MJMAIN-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/><path stroke-width="0" id="E8-MJMAIN-7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"/></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g transform="translate(120,0)"><rect stroke="none" width="1660" height="60" x="0" y="220"/><g transform="translate(453,541)"><use transform="scale(0.707)" xlink:href="#E8-MJMATHI-3B2" x="0" y="0"/><use transform="scale(0.707)" xlink:href="#E8-MJMAIN-32" x="566" y="0"/></g><g transform="translate(60,-435)"><use transform="scale(0.707)" xlink:href="#E8-MJMAIN-7C" x="0" y="0"/><use transform="scale(0.707)" xlink:href="#E8-MJMAIN-7C" x="278" y="0"/><use transform="scale(0.707)" xlink:href="#E8-MJMATHI-3B2" x="556" y="0"/><use transform="scale(0.707)" xlink:href="#E8-MJMAIN-32" x="1122" y="0"/><use transform="scale(0.707)" xlink:href="#E8-MJMAIN-7C" x="1621" y="0"/><use transform="scale(0.707)" xlink:href="#E8-MJMAIN-7C" x="1899" y="0"/></g></g></g></svg></span><script type="math/tex">\frac{β2}{||β2||}</script></p><hr><p><span>对角矩阵、正交矩阵（AA</span><sup><span>T</span></sup><span>=E）</span></p><p><span>对称矩阵(关于主对角线对称，a</span><sub><span>ij</span></sub><span>=a</span><sub><span>ji</span></sub><span>)</span></p><p><sub><span> </span><span class="MathJax_SVG" tabindex="-1" style="font-size: 100%; display: inline-block;"><svg xmlns:xlink="http://www.w3.org/1999/xlink" width="9.03ex" height="6.087ex" viewbox="0 -1545.3 3887.8 2620.9" role="img" focusable="false" style="vertical-align: -2.498ex;"><defs><path stroke-width="0" id="E9-MJMAIN-5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"/><path stroke-width="0" id="E9-MJMATHI-41" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z"/><path stroke-width="0" id="E9-MJMAIN-30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"/><path stroke-width="0" id="E9-MJMATHI-42" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z"/><path stroke-width="0" id="E9-MJMAIN-5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"/><path stroke-width="0" id="E9-MJSZ3-5B" d="M247 -949V1450H516V1388H309V-887H516V-949H247Z"/><path stroke-width="0" id="E9-MJSZ3-5D" d="M11 1388V1450H280V-949H11V-887H218V1388H11Z"/></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><use xlink:href="#E9-MJSZ3-5B"/><g transform="translate(695,0)"><g transform="translate(-12,0)"><use xlink:href="#E9-MJMATHI-41" x="0" y="650"/><use xlink:href="#E9-MJMAIN-30" x="125" y="-750"/></g><g transform="translate(1738,0)"><use xlink:href="#E9-MJMAIN-30" x="129" y="650"/><use xlink:href="#E9-MJMATHI-42" x="0" y="-750"/></g></g><use xlink:href="#E9-MJSZ3-5D" x="3359" y="-1"/></g></svg></span><script type="math/tex"> \left[
 \begin{matrix}
   A & 0\\
   0 & B\\
  \end{matrix} 
\right]</script></sub><sup><span>n</span></sup></p><p><span>      ↓</span></p><p><sub><span> </span><span class="MathJax_SVG" tabindex="-1" style="font-size: 100%; display: inline-block;"><svg xmlns:xlink="http://www.w3.org/1999/xlink" width="11.465ex" height="6.087ex" viewbox="0 -1545.3 4936.4 2620.9" role="img" focusable="false" style="vertical-align: -2.498ex;"><defs><path stroke-width="0" id="E10-MJMAIN-5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"/><path stroke-width="0" id="E10-MJMATHI-41" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z"/><path stroke-width="0" id="E10-MJMATHI-6E" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/><path stroke-width="0" id="E10-MJMAIN-30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"/><path stroke-width="0" id="E10-MJMATHI-42" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z"/><path stroke-width="0" id="E10-MJMAIN-5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"/><path stroke-width="0" id="E10-MJSZ3-5B" d="M247 -949V1450H516V1388H309V-887H516V-949H247Z"/><path stroke-width="0" id="E10-MJSZ3-5D" d="M11 1388V1450H280V-949H11V-887H218V1388H11Z"/></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><use xlink:href="#E10-MJSZ3-5B"/><g transform="translate(695,0)"><g transform="translate(-12,0)"><g transform="translate(0,650)"><use xlink:href="#E10-MJMATHI-41" x="0" y="0"/><use transform="scale(0.707)" xlink:href="#E10-MJMATHI-6E" x="1060" y="513"/></g><use xlink:href="#E10-MJMAIN-30" x="387" y="-750"/></g><g transform="translate(2263,0)"><use xlink:href="#E10-MJMAIN-30" x="391" y="650"/><g transform="translate(0,-750)"><use xlink:href="#E10-MJMATHI-42" x="0" y="0"/><use transform="scale(0.707)" xlink:href="#E10-MJMATHI-6E" x="1073" y="513"/></g></g></g><use xlink:href="#E10-MJSZ3-5D" x="4408" y="-1"/></g></svg></span><script type="math/tex"> \left[
 \begin{matrix}
   A^n & 0\\
   0 & B^n\\
  \end{matrix} 
\right]</script></sub></p><p>&nbsp;</p><p><span class="MathJax_SVG" tabindex="-1" style="font-size: 100%; display: inline-block;"><svg xmlns:xlink="http://www.w3.org/1999/xlink" width="20.081ex" height="12.383ex" viewbox="0 -2917 8646.1 5331.5" role="img" focusable="false" style="vertical-align: -5.608ex;"><defs><path stroke-width="0" id="E11-MJMAIN-5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"/><path stroke-width="0" id="E11-MJMATHI-61" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"/><path stroke-width="0" id="E11-MJMATHI-62" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"/><path stroke-width="0" id="E11-MJMATHI-63" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"/><path stroke-width="0" id="E11-MJMATHI-64" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"/><path stroke-width="0" id="E11-MJMATHI-65" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"/><path stroke-width="0" id="E11-MJMATHI-66" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"/><path stroke-width="0" id="E11-MJMATHI-67" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"/><path stroke-width="0" id="E11-MJMATHI-68" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"/><path stroke-width="0" id="E11-MJMATHI-69" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"/><path stroke-width="0" id="E11-MJMATHI-6A" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"/><path stroke-width="0" id="E11-MJMATHI-6B" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"/><path stroke-width="0" id="E11-MJMATHI-6C" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"/><path stroke-width="0" id="E11-MJMATHI-6D" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"/><path stroke-width="0" id="E11-MJMATHI-6E" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/><path stroke-width="0" id="E11-MJMATHI-6F" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"/><path stroke-width="0" id="E11-MJMATHI-70" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"/><path stroke-width="0" id="E11-MJMATHI-71" d="M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"/><path stroke-width="0" id="E11-MJMATHI-72" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"/><path stroke-width="0" id="E11-MJMATHI-73" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"/><path stroke-width="0" id="E11-MJMATHI-74" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"/><path stroke-width="0" id="E11-MJMAIN-5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"/><path stroke-width="0" id="E11-MJSZ4-23A1" d="M319 -645V1154H666V1070H403V-645H319Z"/><path stroke-width="0" id="E11-MJSZ4-23A3" d="M319 -644V1155H403V-560H666V-644H319Z"/><path stroke-width="0" id="E11-MJSZ4-23A2" d="M319 0V602H403V0H319Z"/><path stroke-width="0" id="E11-MJSZ4-23A4" d="M0 1070V1154H347V-645H263V1070H0Z"/><path stroke-width="0" id="E11-MJSZ4-23A6" d="M263 -560V1155H347V-644H0V-560H263Z"/><path stroke-width="0" id="E11-MJSZ4-23A5" d="M263 0V602H347V0H263Z"/></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g transform="translate(0,2852)"><use xlink:href="#E11-MJSZ4-23A1" x="0" y="-1154"/><g transform="translate(0,-3456) scale(1,2.835548172757475)"><use xlink:href="#E11-MJSZ4-23A2"/></g><use xlink:href="#E11-MJSZ4-23A3" x="0" y="-4561"/></g><g transform="translate(834,0)"><g transform="translate(-15,0)"><use xlink:href="#E11-MJMATHI-61" x="10" y="2052"/><use xlink:href="#E11-MJMATHI-66" x="0" y="652"/><use xlink:href="#E11-MJMATHI-6B" x="14" y="-753"/><use xlink:href="#E11-MJMATHI-70" x="23" y="-2153"/></g><g transform="translate(1535,0)"><use xlink:href="#E11-MJMATHI-62" x="25" y="2052"/><use xlink:href="#E11-MJMATHI-67" x="0" y="652"/><use xlink:href="#E11-MJMATHI-6C" x="91" y="-753"/><use xlink:href="#E11-MJMATHI-71" x="10" y="-2153"/></g><g transform="translate(3015,0)"><use xlink:href="#E11-MJMATHI-63" x="222" y="2052"/><use xlink:href="#E11-MJMATHI-68" x="151" y="652"/><use xlink:href="#E11-MJMATHI-6D" x="0" y="-753"/><use xlink:href="#E11-MJMATHI-72" x="213" y="-2153"/></g><g transform="translate(4893,0)"><use xlink:href="#E11-MJMATHI-64" x="38" y="2052"/><use xlink:href="#E11-MJMATHI-69" x="127" y="652"/><use xlink:href="#E11-MJMATHI-6E" x="0" y="-753"/><use xlink:href="#E11-MJMATHI-73" x="65" y="-2153"/></g><g transform="translate(6493,0)"><use xlink:href="#E11-MJMATHI-65" x="9" y="2052"/><use xlink:href="#E11-MJMATHI-6A" x="36" y="652"/><use xlink:href="#E11-MJMATHI-6F" x="0" y="-753"/><use xlink:href="#E11-MJMATHI-74" x="62" y="-2153"/></g></g><g transform="translate(7979,2852)"><use xlink:href="#E11-MJSZ4-23A4" x="0" y="-1154"/><g transform="translate(0,-3456) scale(1,2.835548172757475)"><use xlink:href="#E11-MJSZ4-23A5"/></g><use xlink:href="#E11-MJSZ4-23A6" x="0" y="-4561"/></g></g></svg></span><script type="math/tex"> \left[
 \begin{matrix}
   a & b & c & d & e\\
   f & g & h & i & j \\
   k & l & m & n & o \\
   p & q & r & s & t
  \end{matrix} 
\right]</script></p><p>&nbsp;</p><p>&nbsp;</p></div>]]></content>
      <categories>
        <category>数学</category>
      </categories>
      <tags>
        <tag>线性代数</tag>
      </tags>
  </entry>
  <entry>
    <title>脱胎换骨</title>
    <url>/2021/05/09/%E8%84%B1%E8%83%8E%E6%8D%A2%E9%AA%A8/</url>
    <content><![CDATA[<p>从一开始 一脸懵的华为云 ，</p>
<p>到 白嫖上瘾的 阿里云，</p>
<p>又到 付费 购买阿里云、腾讯云（薅羊毛），</p>
<p>再到 <strong>GitHub + Domain</strong>，</p>
<p>我的上云之路 ,已经过了有 2-3 个年头了吧</p>
<hr>
<hr>
<p>版本上，从 <strong>Windows Server 2003</strong> 到 <strong>CentOS</strong> 的系统转变…</p>
<p><strong>web</strong> 服务器上，从 <strong>Apache</strong> 到 <strong>Nginx</strong> 的偶然;</p>
<p>云主机上，从 <strong>ESC</strong> 到 轻量级服务器 的变心;</p>
<p>部署上，从主机虚拟 到 域名分级 的思路转换;</p>
<p>带宽上，从1M 到 5M 的狂热</p>
<p>…</p>
<hr>
<hr>
<p>up-to-date,</p>
<p>开始渐渐清楚了我想要什么，制约我的又是什么。</p>
<p>1、经济原因和需求较低<br>经济原因和需求较低，在这两个条件促使下，我决定不再租用服务器，淘汰以服务器为核心，在同一台服务器上采用 主机虚拟化（ <strong>Port</strong> 划分） 去部署多个项目的方案：改为采用以 二级域名 为核心，划分n个三级域名，与n个<strong>GitHub</strong>仓库（个人/组织和 静态展示仓库在数量上，一对一；三级域名与仓库在数量上，一对一）的方案。 </p>
<p>当前阶段，一个静态项目（主页导航级别）与其它静态项目捆绑。</p>
<p>2、环境不再可控（制约）</p>
<p>由于对服务器失去控制权，沦为旁观者，并不可能去改变它，因此需要为后面需要后台的（<strong>Flask</strong> + <strong>VUE3</strong>、<strong>Go</strong> + <strong>VUE3</strong>）的项目寻找一条出路。</p>
<p><a href="https://leancloud.cn/docs/leanengine_webhosting_guide-python.html">leanCloud</a>┅素有后端云之称，可以学习一下。</p>
<p>由于 在 hexo 使用过程中，有一个<a href="https://valine.js.org/">Valine</a>，“传说中的无后台评论”，事项，如果可以在哪里做一个接口服务，并且这个成本很低，那么 <strong>Flask</strong> +<strong>Go</strong> 是很有可能的。</p>
]]></content>
      <categories>
        <category>上云之路</category>
      </categories>
      <tags>
        <tag>阶段性总结</tag>
      </tags>
  </entry>
  <entry>
    <title>英语阅读</title>
    <url>/2021/04/13/%E8%8B%B1%E8%AF%AD%E9%98%85%E8%AF%BB/</url>
    <content><![CDATA[<h4 id="阅读做题步骤："><a href="#阅读做题步骤：" class="headerlink" title="阅读做题步骤："></a>阅读做题步骤：</h4><p><font color="red">先读文章</font><br>  1.先读首段，以及各段首句尾端，抓住文章中心— 一句话表达文中叙述的主要内容，（读不懂呢，就当作提前定位了）</p>
<span id="more"></span>

<p>  2.文中核心词——不同段可能会同义替换<br>  3.作者大概态度</p>
<p><font color="grey">在7月前，目标是单词，语法长难句，遇到不会的单词查</font></p>
]]></content>
      <categories>
        <category>英语</category>
      </categories>
      <tags>
        <tag>阅读</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥日记</title>
    <url>/2022/01/23/%E8%93%9D%E6%A1%A5%E6%9D%AF%E5%A4%87%E8%B5%9B%E9%9A%8F%E7%AC%94/</url>
    <content><![CDATA[<h3 id="查漏补缺"><a href="#查漏补缺" class="headerlink" title="查漏补缺"></a>查漏补缺</h3><h2 id="补充："><a href="#补充：" class="headerlink" title="补充："></a>补充：</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="number">1.</span>若开超大数组爆栈 ,开全局</span><br><span class="line"><span class="number">2.</span>四位数的隐含条件？最小四位数不是 <span class="number">0000</span> 而是 <span class="number">1000</span>，回文数的话，是	<span class="number">1001</span></span><br><span class="line"><span class="number">3.</span>scanf有时候可以解决cin提交出现的TLE（比如要求在<span class="number">150</span>ms内），大概可以提高个<span class="number">2</span>~<span class="number">450</span>ms，数据规模越大，提升越好</span><br><span class="line"><span class="number">5.</span>多组输入，参数初始化，要给放到循环中，好久不写忘了</span><br><span class="line">6.RE错误，runtime error(运行时错误)就是程序运行到一半,程序就崩溃了。</span><br><span class="line"><span class="number">7.</span><span class="keyword">while</span>(cin&gt;&gt;n)多组输入 重复输入结果变了？Ⅰ.初始化没有做好，检查有没有需要初始化的Ⅱ.输入设计的不合理</span><br><span class="line"><span class="number">8.</span>递归：<span class="number">1</span>、缩小规模 <span class="number">2</span>、有结束条件</span><br><span class="line"><span class="number">9.</span><span class="keyword">const</span> 只是一个修饰符，不管怎么样 <span class="keyword">const</span> <span class="keyword">int</span> a;仍然是一个整型变量</span><br><span class="line"><span class="number">10.</span>位操作运算符，参与运算的量，按二进制位进行运算。包括位与(&amp;)、位或(|)、位非(~)、位异或(^)左移(&lt;&lt;)、右移(&gt;&gt;)六种 。</span><br></pre></td></tr></table></figure>

<h3 id="数值处理"><a href="#数值处理" class="headerlink" title="数值处理"></a>数值处理</h3><p><strong>1.绝对值函数</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="built_in">abs</span>()</span><br><span class="line"><span class="built_in">fabs</span>()</span><br></pre></td></tr></table></figure>

<p>头文件</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br></pre></td></tr></table></figure>

<p><strong>2.组合数公式</strong></p>
<blockquote>
<p>A <sub>n</sub><sup>m</sup> = C<sub>n</sub><sup>m</sup> × A<sub>m</sub><sup>m</sup>    其中, A<sub>m</sub><sup>m</sup> = m !      C<sub>n</sub><sup>m</sup> =n!/(  m! (n-m)! )</p>
</blockquote>
<p> <strong>3.int 转 double</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">double</span> res;</span><br><span class="line"></span><br><span class="line">res = <span class="number">6</span>/<span class="number">8</span>;</span><br><span class="line"><span class="comment">//结果 0</span></span><br><span class="line">res = <span class="number">1.0</span>*<span class="number">6</span>/<span class="number">8</span>;</span><br><span class="line"><span class="comment">//有了1.0后，结果 0.75</span></span><br></pre></td></tr></table></figure>

<p><strong>4.memset()</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> a[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> mp[<span class="number">100</span>][<span class="number">100</span>];</span><br><span class="line"></span><br><span class="line"><span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(a));<span class="comment">//0 、-1 、INF 才是有效的赋值   其它赋值结果不详</span></span><br><span class="line"><span class="built_in">memset</span>(mp,<span class="number">0</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(mp));</span><br></pre></td></tr></table></figure>

<p>头文件</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br></pre></td></tr></table></figure>

<p><strong>5.取反函数 reverse()</strong></p>
<p>reverse函数用于反转在[first,last)范围内的顺序（包括first指向的元素，不包括last指向的元素），reverse函数<strong>没有返回值</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//the first condition</span></span><br><span class="line"><span class="keyword">int</span> a[<span class="number">10</span>];</span><br><span class="line"><span class="built_in">reverse</span>(a,a+m);</span><br><span class="line"></span><br><span class="line"><span class="comment">//the second condition</span></span><br><span class="line">string s;</span><br><span class="line"><span class="built_in">reverse</span>(s.<span class="built_in">begin</span>(),s.<span class="built_in">end</span>());</span><br></pre></td></tr></table></figure>

<p>头文件</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span>  </span></span><br></pre></td></tr></table></figure>

<p><strong>6.排序函数 sort()</strong></p>
<p>函数使用的排序方法是类似于快速排序的方法 时间复杂度为n*log2(n)</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//up sort （disabled）</span></span><br><span class="line"><span class="keyword">int</span> a[<span class="number">10</span>]=&#123;<span class="number">9</span>,<span class="number">6</span>,<span class="number">3</span>,<span class="number">8</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">7</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">0</span>&#125;;  </span><br><span class="line"></span><br><span class="line"><span class="built_in">sort</span>(a,a+<span class="number">10</span>);<span class="comment">//a即地址，所以传入的是地址，原数组值改变</span></span><br></pre></td></tr></table></figure>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//drop sort</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">compare</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span> </span></span><br><span class="line"><span class="function">	<span class="keyword">return</span> a&gt;b</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[<span class="number">10</span>]=&#123;<span class="number">9</span>,<span class="number">6</span>,<span class="number">3</span>,<span class="number">8</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">7</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">sort</span>(a,a+<span class="number">10</span>,compare);<span class="comment">//不需要对compare函数传参   </span></span><br></pre></td></tr></table></figure>

<p>头文件</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br></pre></td></tr></table></figure>

<p><strong>若给结构体排序出现失灵？</strong></p>
<p>用于比较大小的变量肯定用错了</p>
<p><strong>7.char[] 如何转 string？如何用 printf 输出？</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> c[<span class="number">20</span>];</span><br><span class="line">string str = c;<span class="comment">//直接赋值，完成转换</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,str.<span class="built_in">c_str</span>());<span class="comment">//c 输出 string</span></span><br><span class="line">cout&lt;&lt;str&lt;&lt;endl; <span class="comment">//c++ 输出 string</span></span><br></pre></td></tr></table></figure>

<p><strong>8.无长度输入字符数组？转整数？</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//cin: [2,7,11,15]</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">vector&lt;<span class="keyword">int</span>&gt;arr;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">str_to_int</span><span class="params">(string s)</span></span>&#123;</span><br><span class="line">    queue&lt;<span class="keyword">char</span>&gt;q;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;s.<span class="built_in">length</span>(); i++)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(i&lt;s.<span class="built_in">length</span>() &amp;&amp;(s[i] ==<span class="string">&#x27;]&#x27;</span>||s[i] == <span class="string">&#x27;,&#x27;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//转数字</span></span><br><span class="line">            <span class="keyword">int</span> in =<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span>(!q.<span class="built_in">empty</span>())</span><br><span class="line">            &#123;</span><br><span class="line">                in *=<span class="number">10</span>;</span><br><span class="line">                in+=q.<span class="built_in">front</span>();</span><br><span class="line"></span><br><span class="line">                q.<span class="built_in">pop</span>();</span><br><span class="line">            &#125;</span><br><span class="line">            arr.<span class="built_in">push_back</span>(in);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(s[i]!=<span class="string">&#x27;]&#x27;</span>&amp;&amp;s[i]!=<span class="string">&#x27;,&#x27;</span>&amp;&amp;s[i]!=<span class="string">&#x27;[&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            q.<span class="built_in">push</span>(s[i]-<span class="string">&#x27;0&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    </span><br><span class="line">    string s;</span><br><span class="line">    <span class="built_in">getline</span>(cin,s);</span><br><span class="line">    <span class="built_in">str_to_int</span>(s);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;arr.<span class="built_in">size</span>();i++)</span><br><span class="line">        cout&lt;&lt;arr[i]&lt;&lt;endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>9.如何定义无穷大？</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span>  INF 0x3f3f3f3f</span></span><br></pre></td></tr></table></figure>

<h3 id="输入输出问题"><a href="#输入输出问题" class="headerlink" title="输入输出问题"></a>输入输出问题</h3><p><strong>如何输出制表符？</strong> </p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\t&quot;</span>);</span><br></pre></td></tr></table></figure>

<p>万能头文件</p>
<p>在c++下编译，如果突然忘了头文件可以用</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br></pre></td></tr></table></figure>

<p>C++下读取整行</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">string s;</span><br><span class="line"><span class="built_in">getline</span>(cin,s); </span><br></pre></td></tr></table></figure>

<p>其它输入</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"></span><br><span class="line">cin&gt;&gt;x;</span><br><span class="line"><span class="built_in">getchar</span>();<span class="comment">//吃掉回车，cin不吃回车，getline会吃，但我们不让他吃掉cin后面的那个回车</span></span><br><span class="line"><span class="built_in">getline</span>(cin,str);</span><br><span class="line"><span class="built_in">getline</span>(cin,str2);<span class="comment">//getline会吃掉回车，所以getline之间不需要单独设置getchar()了  </span></span><br></pre></td></tr></table></figure>

<p><strong>如何输出%？</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//%% 转义后输出%</span></span><br></pre></td></tr></table></figure>

<p>C/C++ 库文件替换</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//c</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="comment">//c++</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br></pre></td></tr></table></figure>

<p><strong>Python 如何实现多组输入？</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span>  True:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">       #...</span><br><span class="line">    except:</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure>

<p>printf 填充</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%02d&quot;</span>,h);</span><br><span class="line"><span class="comment">//占两位，用0填充</span></span><br></pre></td></tr></table></figure>

<h3 id="STL容器"><a href="#STL容器" class="headerlink" title="STL容器"></a>STL容器</h3><p><strong>1.总结</strong></p>
<table>
<thead>
<tr>
<th></th>
<th>STL</th>
<th>特点</th>
</tr>
</thead>
<tbody><tr>
<td>栈</td>
<td>stack</td>
<td>逆序输出 括号匹配 表达式求值</td>
</tr>
<tr>
<td>队列</td>
<td>queue</td>
<td>配合BFS扩展状态，哈夫曼树权重</td>
</tr>
<tr>
<td>动态数组</td>
<td>vector</td>
<td>存结果的数组，二维<code>mp[10]</code>，模拟图的邻接表（二维数组超存时）贼好用</td>
</tr>
<tr>
<td>散列表</td>
<td>map</td>
<td>键值对映射，查找效率高，做树种类统计贼好用 ，统计字串频率</td>
</tr>
<tr>
<td>优先队列</td>
<td>priority_queue</td>
<td>基于大顶堆 ,处理输入序列中最大，最小值</td>
</tr>
<tr>
<td>集合</td>
<td>set</td>
<td></td>
</tr>
<tr>
<td>字符串</td>
<td>string</td>
<td>做查找分割贼好用<br>string str;                   “01 qwe” <br>int pos = str.find(“ “);   <br>str = str.substr(first_position,pos-first_position);    “01”</td>
</tr>
<tr>
<td></td>
<td>pair</td>
<td>适合作为存储一对值的结构体</td>
</tr>
</tbody></table>
<p><strong>2.pair</strong></p>
<p> pair是将2个数据组合成一组数据，pair的实现是一个结构体</p>
<p>当一个函数需要返回2个数据的时候，可以选择pair</p>
<hr>
<p>在创建pair对象时，必须提供两个类型名，两个对应的类型名的类型不必相同</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; p;</span><br><span class="line">cin&gt;&gt;p.first&gt;&gt;p.second;</span><br><span class="line">cout&lt;&lt;p.first&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;p.second&lt;&lt;endl;</span><br></pre></td></tr></table></figure>

<p><strong>3.散列表 map</strong></p>
<p>基于红黑树，map就是将key和value放在一起来保存</p>
<hr>
<p>头文件&amp;定义</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line">map&lt;string,<span class="keyword">int</span>&gt;mp;</span><br></pre></td></tr></table></figure>

<p>insert</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">mp[key]=value;</span><br></pre></td></tr></table></figure>

<p>output or statistics</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">mp[key]=value;</span><br><span class="line">mp[key]=value++;</span><br></pre></td></tr></table></figure>

<p>circulate 循环</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//for</span></span><br><span class="line"><span class="keyword">for</span>(map&lt;string,<span class="keyword">int</span>&gt;::iterator it = mp.<span class="built_in">begin</span>();it != mp.<span class="built_in">end</span>();it ++)&#123;</span><br><span class="line">    cout&lt;&lt;it-&gt;first&lt;it-&gt;second;</span><br><span class="line">    <span class="comment">//取出的是pair类型，</span></span><br><span class="line">    <span class="comment">//key    it-&gt;first</span></span><br><span class="line">    <span class="comment">//value  it-&gt;second</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>判断是否为空键？</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//if_key_exist   1:yes  0:no</span></span><br><span class="line">mp.<span class="built_in">count</span>(key);</span><br></pre></td></tr></table></figure>

<p>删除键key？</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">mp.<span class="built_in">erase</span>(key);</span><br></pre></td></tr></table></figure>

<p>查找键key？</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">map&lt;string,<span class="keyword">int</span>&gt;::iterator it;</span><br><span class="line">it = mp.<span class="built_in">find</span>(s);</span><br><span class="line"><span class="keyword">if</span>(it==mp.<span class="built_in">end</span>())&#123;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;xxx is not found&quot;</span>&lt;&lt;endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>mp.clear();</th>
<th>清空所有键值对</th>
</tr>
</thead>
<tbody><tr>
<td>mp.empty();</td>
<td>如果map为空，返回true，否则返回false</td>
</tr>
</tbody></table>
<p><strong>如何 map 迭代获取 string 所有子串？</strong></p>
<p>模板如下，不太理解</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;str.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;i;j++)&#123;</span><br><span class="line">        string key = str.<span class="built_in">substr</span>(j,i-j);</span><br><span class="line">        map[key]++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//所有字串个数=n（n+1）/2 +1（空串）   ，如果考虑去重，如 “uuu”则再-2   “uuuu”则再-3</span></span><br></pre></td></tr></table></figure>

<p><strong>4.栈 stack</strong></p>
<p>头文件&amp;定义</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line">stack&lt;<span class="keyword">int</span>&gt; s;</span><br></pre></td></tr></table></figure>

<p>出入栈、栈顶元素</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//入栈</span></span><br><span class="line">s.<span class="built_in">push</span>();</span><br><span class="line"><span class="comment">//出栈</span></span><br><span class="line">s.<span class="built_in">pop</span>();</span><br><span class="line"><span class="comment">//返回栈顶元素</span></span><br><span class="line">s.<span class="built_in">top</span>();</span><br></pre></td></tr></table></figure>

<p>容量&amp;空栈判断</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">s.<span class="built_in">size</span>();</span><br><span class="line">s.<span class="built_in">empty</span>();</span><br></pre></td></tr></table></figure>

<p>提示</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span>()</span><br><span class="line">&#123;</span><br><span class="line">    stack&lt;<span class="keyword">int</span>&gt; s;</span><br><span class="line">    <span class="comment">//这样每次循环自动重新初始化，适合多组输入清空栈</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>5.队列 queue</strong></p>
<p>头文件&amp;定义</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line">queue&lt;<span class="keyword">int</span>&gt;q;</span><br></pre></td></tr></table></figure>

<p>出入队列&amp;取头尾元素</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line">q.<span class="built_in">push</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="comment">//</span></span><br><span class="line">q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">back</span>();</span><br></pre></td></tr></table></figure>

<p>容量&amp;空队列判断</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">q.<span class="built_in">size</span>();</span><br><span class="line">q.<span class="built_in">empty</span>();</span><br></pre></td></tr></table></figure>

<p><strong>如何利用 queue 完成树的层序遍历？</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">node</span> <span class="title">BT</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">char</span> data;</span><br><span class="line">    BT*l,*r;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> p;</span><br><span class="line">string s;</span><br><span class="line"><span class="function">BT* <span class="title">create_bt_by_pre</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    BT* root;</span><br><span class="line">    ++p;</span><br><span class="line">    <span class="keyword">if</span>(s[p]==<span class="string">&#x27;,&#x27;</span>)root=<span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        root =<span class="keyword">new</span>  BT;</span><br><span class="line">        root-&gt;data = s[p];</span><br><span class="line">        root-&gt;l=<span class="built_in">create_bt_by_pre</span>();</span><br><span class="line">        root-&gt;r=<span class="built_in">create_bt_by_pre</span>();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> root;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        p=<span class="number">-1</span>;</span><br><span class="line">        cin&gt;&gt;s;</span><br><span class="line">        BT* root = <span class="built_in">create_bt_by_pre</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// level_traversal</span></span><br><span class="line">        <span class="keyword">if</span>(root)<span class="comment">//root ==NULL 时不能进队列，有一个，nuLL的队列不是空队列，下面会执行null-&gt;l?</span></span><br><span class="line">        &#123;</span><br><span class="line">            queue&lt;BT*&gt;q;</span><br><span class="line">            q.<span class="built_in">push</span>(root);</span><br><span class="line">            <span class="keyword">while</span>(!q.<span class="built_in">empty</span>())</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(q.<span class="built_in">front</span>()-&gt;l)q.<span class="built_in">push</span>(q.<span class="built_in">front</span>()-&gt;l);</span><br><span class="line">                <span class="keyword">if</span>(q.<span class="built_in">front</span>()-&gt;r)q.<span class="built_in">push</span>(q.<span class="built_in">front</span>()-&gt;r);</span><br><span class="line">                cout&lt;&lt;q.<span class="built_in">front</span>()-&gt;data;</span><br><span class="line">                q.<span class="built_in">pop</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>自己实现的 queue 排序（以后用优先队列）</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> s[<span class="number">300</span>];</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,s))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> len = <span class="built_in">strlen</span>(s);</span><br><span class="line">        <span class="keyword">int</span> len_asc = len*<span class="number">8</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> t[<span class="number">300</span>];</span><br><span class="line">        queue &lt;<span class="keyword">int</span>&gt;q;</span><br><span class="line">        <span class="built_in">memset</span>(t,<span class="number">0</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(t));</span><br><span class="line">        <span class="keyword">int</span> sum =<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i =<span class="number">0</span>; i&lt;len; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(t[(<span class="keyword">int</span>)s[i]] == <span class="number">0</span>)sum++;</span><br><span class="line">            t[(<span class="keyword">int</span>)s[i]]++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        len=sum;<span class="comment">//有效长度</span></span><br><span class="line">        <span class="keyword">int</span> len_huf =<span class="number">0</span>;</span><br><span class="line">        <span class="comment">//queue 分配一个排序数组t[]</span></span><br><span class="line">        <span class="keyword">while</span>(len!=<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">sort</span>(t,t+<span class="number">300</span>);</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">300</span>-len; i&lt;<span class="number">300</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                q.<span class="built_in">push</span>(t[i]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">int</span> f1=q.<span class="built_in">front</span>();</span><br><span class="line">            q.<span class="built_in">pop</span>();</span><br><span class="line">            <span class="keyword">int</span> f2=q.<span class="built_in">front</span>();</span><br><span class="line">            q.<span class="built_in">pop</span>();</span><br><span class="line">            q.<span class="built_in">push</span>(f1+f2);</span><br><span class="line">            len_huf+=f1+f2;</span><br><span class="line">            len--;</span><br><span class="line">            <span class="keyword">int</span> j=<span class="number">300</span>-len;</span><br><span class="line">            <span class="keyword">while</span>(!q.<span class="built_in">empty</span>())</span><br><span class="line">            &#123;</span><br><span class="line">                t[j++]=q.<span class="built_in">front</span>();</span><br><span class="line">                q.<span class="built_in">pop</span>();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d %d %.1lf\n&quot;</span>,len_asc,len_huf,<span class="number">1.0</span>*len_asc/len_huf);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>如何用 queue 计算哈夫曼树叶子编码长度？</strong></p>
<blockquote>
<p>即， 叶节点权重*高度，等价于求所有节点（除根节点）编码权重之和</p>
</blockquote>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//queue排序      以后用优先队列就好了</span></span><br><span class="line"> queue &lt;<span class="keyword">int</span>&gt;q;</span><br><span class="line"> <span class="keyword">int</span> t[<span class="number">300</span>];</span><br><span class="line"><span class="comment">//queue 分配一个排序数组t[]</span></span><br><span class="line">        <span class="keyword">while</span>(len!=<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//排序t[]</span></span><br><span class="line">            <span class="built_in">sort</span>(t,t+<span class="number">300</span>);</span><br><span class="line">            <span class="comment">//进q</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">300</span>-len; i&lt;<span class="number">300</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                q.<span class="built_in">push</span>(t[i]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">int</span> f1=q.<span class="built_in">front</span>();</span><br><span class="line">            q.<span class="built_in">pop</span>();</span><br><span class="line">            <span class="keyword">int</span> f2=q.<span class="built_in">front</span>();</span><br><span class="line">            q.<span class="built_in">pop</span>();</span><br><span class="line">            q.<span class="built_in">push</span>(f1+f2);</span><br><span class="line">            len_huf+=f1+f2;</span><br><span class="line">            len--;</span><br><span class="line">            <span class="comment">//定义t[]起始j,准备出q</span></span><br><span class="line">            <span class="keyword">int</span> j=<span class="number">300</span>-len;</span><br><span class="line">            <span class="comment">//进t[]</span></span><br><span class="line">            <span class="keyword">while</span>(!q.<span class="built_in">empty</span>())</span><br><span class="line">            &#123;</span><br><span class="line">                t[j++]=q.<span class="built_in">front</span>();</span><br><span class="line">                q.<span class="built_in">pop</span>();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>

<p><strong>6.优先队列 priority_queue</strong></p>
<p><code>queue</code>不同的就在于我们可以自定义其中数据的优先级, 让优先级高的排在队列前面,优先出队</p>
<p>优先队列具有队列的所有特性，包括基本操作，只是在这基础上添加了内部的一个排序，它本质是一个堆实现的</p>
<hr>
<p>头文件&amp;定义</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line">priority_queue&lt;<span class="keyword">int</span>&gt;pq;</span><br></pre></td></tr></table></figure>

<p>出入优先队列&amp;访问队头元素</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line">pq.<span class="built_in">push</span>();</span><br><span class="line">pq.<span class="built_in">pop</span>();</span><br><span class="line"><span class="comment">//</span></span><br><span class="line">pq.<span class="built_in">top</span>();</span><br></pre></td></tr></table></figure>

<p>优先队列容量&amp;空优先队列判断</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">pq.<span class="built_in">size</span>();</span><br><span class="line">pq.<span class="built_in">empty</span>();</span><br></pre></td></tr></table></figure>

<p><strong>如何用优先队列小顶堆，计算哈夫曼树的合并代价？</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">priority_queue&lt;<span class="keyword">int</span>,vector&lt;<span class="keyword">int</span>&gt;,greater&lt;<span class="keyword">int</span>&gt; &gt;q;</span><br></pre></td></tr></table></figure>

<p><strong>7.字符串 string</strong></p>
<p>按下标查找</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">string s=<span class="string">&quot;abcda&quot;</span>;</span><br><span class="line"><span class="comment">//</span></span><br><span class="line">s.<span class="built_in">find</span>(<span class="string">&#x27;a&#x27;</span>);                     <span class="comment">//first position output:0</span></span><br><span class="line">s.<span class="built_in">rfind</span>(<span class="string">&#x27;a&#x27;</span>);                    <span class="comment">//last position output:4</span></span><br></pre></td></tr></table></figure>

<p>替换</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">s.replace(0,1,&#x27;11&#x27;)              //下标0开始，连续占用1个位置替换：11bcda</span><br></pre></td></tr></table></figure>

<p>比较</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">string s2=<span class="string">&quot;abcda&quot;</span>;</span><br><span class="line">s.<span class="built_in">compare</span>(s2)                    <span class="comment">//  s&gt;s2返回值为1    =:0   &lt;:-1</span></span><br></pre></td></tr></table></figure>

<p>切片</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">str =  s.<span class="built_in">substr</span>(<span class="number">0</span>,<span class="number">3</span>)                   <span class="comment">//0开始，截取3字节  abc</span></span><br></pre></td></tr></table></figure>

<p>插入删除</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">s.<span class="built_in">insert</span>(<span class="number">3</span>,<span class="string">&quot;asd&quot;</span>)                <span class="comment">//插入到第三个位置</span></span><br><span class="line">s.<span class="built_in">erase</span>(<span class="number">0</span>,<span class="number">2</span>)                     <span class="comment">//0开始，删除2字节 ,删除超过存在字节数，不要紧，结果就是空</span></span><br></pre></td></tr></table></figure>

<p><strong>8.可变数组 vector</strong></p>
<p>头文件&amp;定义</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line">vector &lt;<span class="keyword">int</span>&gt;arr;<span class="comment">//一维可变数组，存遍历结果贼好用</span></span><br></pre></td></tr></table></figure>

<p>输入</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//input</span></span><br><span class="line">v.<span class="built_in">push_back</span>(<span class="number">1</span>); <span class="comment">//□   arr[0]</span></span><br><span class="line">v.<span class="built_in">push_back</span>(<span class="number">2</span>);<span class="comment">//□+□</span></span><br><span class="line">v.<span class="built_in">push_back</span>(<span class="number">3</span>);<span class="comment">//□+□+□</span></span><br></pre></td></tr></table></figure>

<p>遍历</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//condition 1  </span></span><br><span class="line"><span class="comment">//基于迭代器变量 vector&lt;int&gt;::iterator</span></span><br><span class="line"><span class="keyword">for</span>(vector&lt;<span class="keyword">int</span>&gt;::iterator it =arr.<span class="built_in">begin</span>();it!= arr.<span class="built_in">end</span>();it++)</span><br><span class="line">&#123;</span><br><span class="line">    cout&lt;&lt;*it&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//condition 2</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;arr.<span class="built_in">size</span>();i++)</span><br><span class="line">&#123;</span><br><span class="line">    cout&lt;&lt;arr[i]&lt;&lt;endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>vector 排序</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sort</span>(v.<span class="built_in">begin</span>(),v.<span class="built_in">end</span>());</span><br></pre></td></tr></table></figure>

<p><strong>如何用 vector 模拟图的邻接表？</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">vector&lt;<span class="keyword">int</span>&gt;mp[<span class="number">50000</span>];<span class="comment">// 实际上是二维矩阵，模拟图的邻接表（二维数组超存时）贼好用</span></span><br></pre></td></tr></table></figure>

<p><strong>多组输入时，如何清空 vector ？</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span>()&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) mp[i].<span class="built_in">clear</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>如何用 vector 实现无向图存储？</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> a,b;</span><br><span class="line">mp[a].<span class="built_in">push_back</span>(b);</span><br><span class="line">mp[b].<span class="built_in">push_back</span>(a);</span><br></pre></td></tr></table></figure>

<p>用 vector 实现无向图存储，遍历用时更短</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//取值 比如a可到达的节点</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;mp[a].<span class="built_in">size</span>();j++)</span><br><span class="line">&#123;</span><br><span class="line">    cout&lt;&lt;mp[a][j];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>如何用 vector 实现二维数组存储？</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">例如，存入</span></span><br><span class="line"><span class="comment">aaaaaaa</span></span><br><span class="line"><span class="comment">bbbb</span></span><br><span class="line"><span class="comment">ccccccccc</span></span><br><span class="line"><span class="comment">用 vector&lt;int&gt;temp 存 aaaaaaaa</span></span><br><span class="line"><span class="comment">再 array.push_back(temp)</span></span><br><span class="line"><span class="comment">依次按行存入整个二维矩阵</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;array;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;array.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;array[i].<span class="built_in">size</span>();j++)&#123;</span><br><span class="line">      <span class="comment">//array[i][j]</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>9.集合 set</strong></p>
<table>
<thead>
<tr>
<th>作用</th>
<th>方法</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>定义</td>
<td>set<type> s;</type></td>
<td>type 可以是任何基本类型或者容器</td>
</tr>
<tr>
<td>插入元素</td>
<td>s.insert(x)</td>
<td>将元素插入到集合中</td>
</tr>
<tr>
<td>删除元素</td>
<td>s.erase(x)</td>
<td>移除元素</td>
</tr>
<tr>
<td>查找元素</td>
<td>s.count(x)</td>
<td>判断集合中是否存在该元素</td>
</tr>
<tr>
<td>获取元素个数</td>
<td>s.size()</td>
<td>不会删除队尾元素</td>
</tr>
<tr>
<td>清空集合</td>
<td>s.clear()</td>
<td>删除集合中所有元素</td>
</tr>
</tbody></table>
<h3 id="复数比较"><a href="#复数比较" class="headerlink" title="复数比较"></a>复数比较</h3><p><strong>如何用结构体重载 &lt;实现复数比较？</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//比较复数a+bi 重载&lt;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Complex</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> a;</span><br><span class="line">    <span class="keyword">int</span> b;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span>&lt; (Complex c) <span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a*a+b*b &lt; c.a*c.a+c.b*c.b;<span class="comment">//比较模大小</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h3 id="链表问题"><a href="#链表问题" class="headerlink" title="链表问题"></a>链表问题</h3><p>纠正一下下面的问题 ！返回值为指针没意义，改动的是地址</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">llist* <span class="title">ins</span><span class="params">(llist* head,<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="comment">//...</span></span><br><span class="line">    <span class="keyword">return</span> head;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//等价 </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ins</span><span class="params">(llist* head,<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="comment">//...</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="数组问题"><a href="#数组问题" class="headerlink" title="数组问题"></a>数组问题</h3><p>纠正! 修改函数中的数组a，原数组也会变，数组作为函数参数，传递的是数组首地址，并不是复制一遍，属于值传递。</p>
<p>所以很多时候为了共享数组开全局的情况只要不是数组太大怕爆栈，都没必要开全局。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span> a[])</span></span>;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[<span class="number">10</span>];</span><br><span class="line"><span class="built_in">f</span>(a);  </span><br></pre></td></tr></table></figure>

<h3 id="字符长度"><a href="#字符长度" class="headerlink" title="字符长度"></a>字符长度</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//c</span></span><br><span class="line"><span class="keyword">char</span> ch[<span class="number">20</span>];</span><br><span class="line"><span class="keyword">int</span> len =<span class="built_in">strlen</span>(ch);</span><br><span class="line"><span class="comment">//c++</span></span><br><span class="line">string str;</span><br><span class="line"><span class="keyword">int</span> len = str.<span class="built_in">length</span>();</span><br></pre></td></tr></table></figure>

<p>头文件</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span><span class="comment">//strlen</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br></pre></td></tr></table></figure>

<h3 id="BFS-模板"><a href="#BFS-模板" class="headerlink" title="BFS 模板"></a>BFS 模板</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span>(!q.<span class="built_in">empty</span>())</span><br><span class="line">   &#123;</span><br><span class="line">       <span class="keyword">int</span> p = q.<span class="built_in">front</span>();</span><br><span class="line">       q.<span class="built_in">pop</span>();</span><br><span class="line"></span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">       &#123;</span><br><span class="line">           <span class="keyword">if</span>(!vis[i]&amp;&amp;ma[p][i])</span><br><span class="line">           &#123;</span><br><span class="line">               <span class="comment">//d[i]=d[p]+1;</span></span><br><span class="line">               vis[i]=<span class="number">1</span>;</span><br><span class="line">               q.<span class="built_in">push</span>(i);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>

<h3 id="DFS模板"><a href="#DFS模板" class="headerlink" title="DFS模板"></a>DFS模板</h3><p><strong>如何用 vector 存图优化 dfs，降低搜索时间？</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//用vector 存边</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">//int mp[5000][5000]; too large</span></span><br><span class="line">vector&lt;<span class="keyword">int</span>&gt;mp[<span class="number">50000</span>];</span><br><span class="line"><span class="keyword">int</span> vis[<span class="number">50000</span>];</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> v)</span><span class="comment">//优化后的dfs  按照以前写法o（n）2</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    vis[v] =<span class="number">1</span>;</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;(<span class="keyword">int</span>)mp[v].<span class="built_in">size</span>(); j++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(!vis[mp[v][j]])<span class="built_in">dfs</span>(i);</span><br><span class="line">    &#125;</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> cir =<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;m))</span><br><span class="line">    &#123;</span><br><span class="line">        cir++;</span><br><span class="line">        <span class="keyword">if</span>( n==<span class="number">0</span>&amp;&amp;m==<span class="number">0</span>)<span class="keyword">break</span>;</span><br><span class="line">        <span class="comment">//init</span></span><br><span class="line"><span class="comment">//        memset(mp,0,sizeof(mp));</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        &#123;</span><br><span class="line"><span class="comment">//vector 清空  size置为0，空间大小还在</span></span><br><span class="line">            mp[i].<span class="built_in">clear</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(vis));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(m--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> a,b;</span><br><span class="line">            cin&gt;&gt;a&gt;&gt;b;</span><br><span class="line"><span class="comment">//            mp[a][b]=mp[b][a]=1;</span></span><br><span class="line">            mp[a].<span class="built_in">push_back</span>(b);</span><br><span class="line">            mp[b].<span class="built_in">push_back</span>(a);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//the times of dfs //连通分量</span></span><br><span class="line">        <span class="keyword">int</span> co =<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(!vis[i])</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">dfs</span>(i);</span><br><span class="line">                co++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Case %d: %d\n&quot;</span>,cir,co);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>vector 存图，如何取边？</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//vector取值 </span></span><br><span class="line"><span class="comment">//拼出一个个之前输入的mp[i]  ,存的只是一个数字，试试mp[i][0]</span></span><br><span class="line">	<span class="keyword">for</span> (i)</span><br><span class="line">		<span class="keyword">for</span> (j)</span><br><span class="line">            cout&lt;&lt;mp[i][j];</span><br></pre></td></tr></table></figure>

<h3 id="图算法总结"><a href="#图算法总结" class="headerlink" title="图算法总结"></a>图算法总结</h3><blockquote>
<p>Prim:代码解决最小生成树/连通花费最低代价问题</p>
<p>Dijkstral:画图解决单源最短路/所有点距离某一点最短路径</p>
<p>floyd:O(n)3代码解决多元代价最短路问题 </p>
</blockquote>
<h3 id="快速幂模板"><a href="#快速幂模板" class="headerlink" title="快速幂模板"></a>快速幂模板</h3><p>更快速的计算幂运算</p>
<p>32   :2^5     乘 5次2    快速幂（101），乘两次时间上log（n）  </p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//数字转二进制</span></span><br><span class="line"><span class="built_in">f</span>(<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">int</span> mod)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span>(b!=<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//处理b%2</span></span><br><span class="line">        </span><br><span class="line">        b/=<span class="number">2</span>;       </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">FastExponentiation</span>(<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">int</span> mod)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">int</span> ans =<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b!=<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(b%<span class="number">2</span>==<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">           ans*=a;</span><br><span class="line">           ans%=mod;</span><br><span class="line">        &#125;</span><br><span class="line">        b/=<span class="number">2</span>;</span><br><span class="line">        a*=a;</span><br><span class="line">        a%=mod;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="循环问题"><a href="#循环问题" class="headerlink" title="循环问题"></a>循环问题</h3><p><strong>下面这种循环中执行break的三种情况？</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> i; </span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)...</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>1、没跑完，找到了   i&lt;n</p>
<p>2、跑完了，找到了，计数变量 i = n-1</p>
<p>3、跑完了，没找到，i = n</p>
<p>for+break标识 第一次匹配的位置 </p>
</blockquote>
<h3 id="阶乘问题"><a href="#阶乘问题" class="headerlink" title="阶乘问题"></a>阶乘问题</h3><p>要先了解 阶乘计算数值骤增的特点，</p>
<p>若采用暴力计算，int 只能计算到 12！long long int 只能到20！</p>
<p><strong>如何用组合数来优化阶乘计算，解决阶乘暴力计算过程值太大？</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span>  <span class="title">C</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> res = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=a,j=<span class="number">1</span>;j&lt;=b;i--,j++)&#123;</span><br><span class="line">        res =res * i / j;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="大数加法模板"><a href="#大数加法模板" class="headerlink" title="大数加法模板"></a>大数加法模板</h3><p>只用基本数据类型，<strong>十位数的运算</strong>就是到极限了，这时，想要进行大数运算，需要用大数加法</p>
<p>大数加法原理：小学列式法，一位一位的加，大于十就进位</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXLEN 10000<span class="comment">//规模  10000位数</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string buffer;</span><br><span class="line">    <span class="keyword">int</span> a[<span class="number">10001</span>],b[<span class="number">10001</span>];<span class="comment">//a、b为两个正整数</span></span><br><span class="line">    <span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(a));</span><br><span class="line">    <span class="built_in">memset</span>(b,<span class="number">0</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(b));</span><br><span class="line">    <span class="comment">//逆序输入a</span></span><br><span class="line">    cin&gt;&gt;buffer;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>, i=buffer.<span class="built_in">length</span>()<span class="number">-1</span>; i&gt;=<span class="number">0</span>; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        a[j++] = buffer[i]-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//逆序输入b</span></span><br><span class="line">    cin&gt;&gt;buffer;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>, i=buffer.<span class="built_in">length</span>()<span class="number">-1</span>; i&gt;=<span class="number">0</span>; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        b[j++] = buffer[i]-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//计算</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> up=<span class="number">0</span>, i=<span class="number">0</span>; i&lt;MAXLEN; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> tmp  = a[i]+b[i] +up;</span><br><span class="line">        a[i]=tmp%<span class="number">10</span>;</span><br><span class="line">        up = tmp/<span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//逆序输出逆序的a  逆逆得正序</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=MAXLEN; i&gt;=<span class="number">0</span>; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i] !=<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(i=i; i&gt;=<span class="number">0</span>; i--)</span><br><span class="line">            &#123;</span><br><span class="line">                cout&lt;&lt;a[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="结构体问题"><a href="#结构体问题" class="headerlink" title="结构体问题"></a>结构体问题</h3><p>结构体实例化</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="keyword">int</span> data;</span><br><span class="line">&#125;Nickname;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//实例化1</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">node</span> <span class="title">a</span>;</span></span><br><span class="line">    cout&lt;&lt;a.data&lt;&lt;endl;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//实例化2</span></span><br><span class="line">    Nickname b;   </span><br><span class="line">    cout&lt;&lt;b.data&lt;&lt;endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="并查集模板"><a href="#并查集模板" class="headerlink" title="并查集模板"></a>并查集模板</h3><p>用于判断连通图、求连通分量</p>
<blockquote>
<p>1.初始化 Initial() </p>
<p>2.合并 Union()   路径压缩</p>
<p>3.查询 Find()  找爹</p>
</blockquote>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> father[<span class="number">1010</span>];</span><br><span class="line"><span class="keyword">int</span> height[<span class="number">1010</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Initial</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        father[i]=i;<span class="comment">//自己是自己的父亲</span></span><br><span class="line">        height[i]=<span class="number">0</span>;<span class="comment">//高度为0</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Find</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;<span class="comment">//找爹</span></span><br><span class="line">    <span class="keyword">if</span>(x !=father[x])&#123;<span class="comment">//找到根节点 才返回</span></span><br><span class="line">        father[x] = <span class="built_in">Find</span>(father[x]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> father[x];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Union</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    x =<span class="built_in">Find</span>(x);</span><br><span class="line">    y =<span class="built_in">Find</span>(y);</span><br><span class="line">    <span class="keyword">if</span>(x!=y)&#123;</span><br><span class="line">            <span class="keyword">if</span>(height[x] &lt; height[y])&#123; <span class="comment">//矮子合并到高个子树上，整体高度不变</span></span><br><span class="line">            father[x] =y;</span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(height[x]&gt;height[y])&#123;</span><br><span class="line">            father[y]=x;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            father[y] =x;</span><br><span class="line">            height[x]++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(cin&gt;&gt;n&gt;&gt;m)&#123;</span><br><span class="line">        <span class="keyword">if</span>(n == m &amp;&amp; n == <span class="number">0</span>)<span class="keyword">break</span>;</span><br><span class="line">        <span class="built_in">Initial</span>();</span><br><span class="line">        <span class="keyword">while</span>(m--)&#123;</span><br><span class="line">            <span class="keyword">int</span> x,y;</span><br><span class="line">                cin&gt;&gt;x&gt;&gt;y;</span><br><span class="line">            <span class="built_in">Union</span>(x,y);</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> compenent =<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">Find</span>(i) == i)compenent++;<span class="comment">//连通分量个数，数数根节点</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(compenent == <span class="number">1</span>)&#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;YES&quot;</span>&lt;&lt;endl;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;NO&quot;</span>&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="树问题"><a href="#树问题" class="headerlink" title="树问题"></a>树问题</h3><p><strong>如何判定是一颗树？</strong></p>
<blockquote>
<p>一个集合/一个连通分量</p>
<p>入度：根节点：0，其他节点：1</p>
<p>有可能会遇到编号不连续没有给出顶点从1开始编号观察样例有没有   2，3，4，5，6这样不是从1开始连续的，到时候遍历集合的时候跳过即可。</p>
</blockquote>
<h3 id="01背包问题"><a href="#01背包问题" class="headerlink" title="01背包问题"></a>01背包问题</h3><p>【动态规划】</p>
<blockquote>
<p>有限制的选择问题</p>
<p><a href="https://www.bilibili.com/video/BV1K4411X766?from=search&amp;seid=11764982276319298611&amp;spm_id_from=333.337.0.0">https://www.bilibili.com/video/BV1K4411X766?from=search&amp;seid=11764982276319298611&amp;spm_id_from=333.337.0.0</a></p>
</blockquote>
<h3 id="子序列和子串"><a href="#子序列和子串" class="headerlink" title="子序列和子串"></a>子序列和子串</h3><p><strong>定义</strong>：<br>所谓的<strong>子序列</strong>就是在原来序列中找出一部分组成的序列<br><strong>举例</strong>：<br>12356710它的子序列有很多。比如：12,13 ,15,16,1356,137,…</p>
<p><strong>子串定义</strong>：<br><strong>子串</strong>指的是串中任意个连续的字符组成的子序列，称为该串的子串<br><strong>举例</strong>：<br>假设字符串的长度为n，其非空子串的数目为n(n+1)/2个。</p>
<p>例如字符串“abc“的连续子串有 a,ab,abc,b,bc,c 最大连续子序列才是子串。</p>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>蓝桥</tag>
        <tag>c++</tag>
      </tags>
  </entry>
  <entry>
    <title>轮滑小记</title>
    <url>/2021/04/14/%E8%BD%AE%E6%BB%91%E5%B0%8F%E8%AE%B0/</url>
    <content><![CDATA[<p><img src="/2021/04/14/%E8%BD%AE%E6%BB%91%E5%B0%8F%E8%AE%B0/1.jpg" alt="1"></p>
<p><font color="#8470FF">个人拙见，<strong>滑</strong>是轮滑的要领。</font></p>
<ul>
<li><input checked disabled type="checkbox"> :完成  </li>
<li><input disabled type="checkbox"> ：尚未达标</li>
</ul>
<h3 id="Tip："><a href="#Tip：" class="headerlink" title="Tip："></a>Tip：</h3><hr>
<ul>
<li><input checked disabled type="checkbox"> 1.<strong>滑行</strong></li>
<li>屈膝，大角度滑，找到滑的感觉和节奏</li>
<li><font color="#00BFFF">【问题】左腿压韧，注意滑一脚后往外一下</font></li>
<li>双脚要蹬起来，力度不够</li>
<li>膝盖可以再弯一点</li>
<li>滑行转弯时身体要前倾，右脚外搭以此为中心，身体带动左脚滑弧</li>
<li><font color="#00BFFF">【问题】现在停下来要外八字（起步还有力）</font></li>
<li>直行，水平蹬.不要后蹬，太丑<span id="more"></span></li>
</ul>
<hr>
<ul>
<li><input checked disabled type="checkbox"> 2.<strong>T刹</strong></li>
<li>学姐，那种踢刹虽然会拐弯，还行吧</li>
<li>另一种T刹，前腿弯曲至顶到鞋前盖，用力，身体向左前方倾</li>
<li>后脚与前脚留有一定距离，脚尖向上颠，脚后跟用力压住（整个过程需要腰的灵活）</li>
<li><font color="#00BFFF">【问题】压韧，所以要时常做压外韧练习</font></li>
</ul>
<hr>
<ul>
<li><input checked disabled type="checkbox"> 3.<strong>双鱼</strong></li>
<li>那不有腿就行</li>
</ul>
<hr>
<ul>
<li><input checked disabled type="checkbox"> 4.<strong>正剪和倒剪</strong></li>
<li>关键就是一种节奏感，有缓有急，<strong>倒剪</strong>就是画弧，就能做好</li>
<li>倒剪，注意 身子直起来，头向肩后方看，腿下压，这样就不会歪了</li>
</ul>
<hr>
<ul>
<li><input checked disabled type="checkbox"> 5.<strong>正蛇</strong></li>
<li>注意，前脚提供发力，后脚跟的时候留有一定空隙 ，并且两脚的动作不同步，正剪的步伐，双鱼的姿态，两手伸平伸平伸直！腿下压</li>
</ul>
<hr>
<ul>
<li><input checked disabled type="checkbox"> 6.<strong>压弯道</strong></li>
<li>左手后背，右手外张</li>
<li>左腿弯曲，右腿伸直，抬到左腿前面，画圆</li>
</ul>
<hr>
<ul>
<li><input checked disabled type="checkbox"> 7.<strong>sun</strong></li>
<li>上身张开才不会越滑越急，转圈要定住圆心自然的滑，而不是用力地扭过去，不要看桩</li>
</ul>
<hr>
<ul>
<li><input checked disabled type="checkbox"> 8.<strong>volt</strong></li>
<li>转的关键是两个腿加紧，这样重心可以掌控在点轮上</li>
</ul>
<hr>
<ul>
<li><input checked disabled type="checkbox"> 9.<strong>double 点轮</strong></li>
<li>靠右脚为动力做倒剪的轨迹，左脚下去后单轮压外刃支撑变换方向，显的很流畅</li>
</ul>
<hr>
<ul>
<li><input checked disabled type="checkbox"> 10.<strong>后单脚</strong></li>
<li>右脚直角一直不动，作为方向辅助甩，作家为主动力使劲扭身子尽量直，倒蛇高速，，！！放开甩（我师父是这么坑我的）</li>
</ul>
<hr>
<ul>
<li><input checked disabled type="checkbox"> 11.<strong>volt</strong></li>
<li>转的时候，后脚滑到左脚左侧一点点位置，就是说交叉一下，你就可以实现先靠近转的点，再点轮了，点轮时两膝盖夹紧</li>
</ul>
<hr>
<ul>
<li><input checked disabled type="checkbox"> 12.<strong>X步</strong></li>
<li>纯扭腰，要把右脚扭到最大程度</li>
<li>关键在于摆臂动作</li>
</ul>
<hr>
<ul>
<li><input checked disabled type="checkbox"> 13.<strong>蛇步</strong></li>
<li>一个空一个蛇步，五个轮子的话，前脚单轮，感觉要使劲扭</li>
</ul>
<hr>
<ul>
<li><input disabled type="checkbox"> 14.<strong>蛇形转圈</strong></li>
<li>上身先转，手要低于肩部高于腰部，好看(｡･ω･｡)ﾉ♡，平时多练对转圈动作有好处，转过去，朝着回来转一圈</li>
</ul>
<hr>
<ul>
<li><input checked disabled type="checkbox"> 15.<strong>反倒尼</strong></li>
<li>右脚走蛇步，左脚切</li>
</ul>
<hr>
<ul>
<li><input checked disabled type="checkbox"> 16.<strong>小汽车</strong></li>
<li>几乎要坐在轮子上，然后直着身子过四个大桩即可</li>
</ul>
<hr>
<ul>
<li><input checked disabled type="checkbox"> 17.<strong>玛丽转</strong></li>
<li>双腿稍曲，慢慢的初速度，转</li>
</ul>
<hr>
<ul>
<li><input checked disabled type="checkbox"> 18.<strong>倒八字</strong></li>
<li>有视频</li>
</ul>
<hr>
<ul>
<li><input checked disabled type="checkbox"> 19.<strong>漂移</strong></li>
<li>漂移的时候后脚中心不要在脚后跟上</li>
</ul>
<hr>
<ul>
<li><input checked disabled type="checkbox"> 20.<strong>右单脚</strong></li>
<li>原地起步，练脚力，从每个桩右侧向左侧发力，单脚要回蹲</li>
</ul>
<hr>
<ul>
<li><input checked disabled type="checkbox"> 21.<strong>combo</strong></li>
<li>大桩 小汽车 蟹步波浪 z蟹…</li>
<li>小庄 小马跳 蛇步…</li>
<li>中桩 摆脱僵硬感 ，展开双手即可…</li>
</ul>
<hr>
<ul>
<li><input disabled type="checkbox"> 22.<strong>天鹅蟹</strong></li>
<li>自己的左脚不灵活，把它放上面</li>
<li>尤其是右脚，起来的时候要压韧，用左脚顶住右脚</li>
</ul>
<hr>
<ul>
<li><input checked disabled type="checkbox"> 23.<strong>tocross【旋转类】</strong></li>
<li>旋转动作一律用上身带动去转最简单做出来</li>
<li>可以提高其他动作的流畅感，奶牛的起步，剪过去，点轮，重复，越流畅越好</li>
</ul>
<hr>
<ul>
<li><input disabled type="checkbox"> 24.<strong>crab【跳跃类】</strong></li>
<li>表演的时候要控制表情，不然人家看到的是你板着脸，同志，不帅不骚好吧，正大睁大眼睛也好！</li>
</ul>
<hr>
<ul>
<li><input checked disabled type="checkbox"> 25.<strong>total cross</strong></li>
<li>crazy 上，右脚先剪过桩，左脚再反韧，左脚外圈，右脚内圈，画圈，点轮点住，crazy 后半部分不上，也就是奶牛最后一步</li>
</ul>
<hr>
<ul>
<li><input checked disabled type="checkbox"> 26.<strong>j turn</strong></li>
<li>crazy 上去以后，右脚往后收，带着左脚转小圈，然后左脚转到桩上以后，两脚下蹲，在桩前左脚外点，左脚在桩前，右脚在桩后画圈</li>
</ul>
<hr>
<ul>
<li><input disabled type="checkbox"> 27.<strong>Z蟹</strong></li>
<li>向右滑右脚在前，然后右脚要向前压韧，提供转向空间，速度越够转向越流畅</li>
</ul>
<hr>
<ul>
<li><input checked disabled type="checkbox"> 28.<strong>双轮倒蛇</strong></li>
<li>重心在后脚，两脚间距不宜过大</li>
</ul>
<hr>
<ul>
<li><input disabled type="checkbox"> 29.<strong>小马跳</strong></li>
<li>哔哩哔哩 天策轮滑</li>
</ul>
<hr>
<ul>
<li><input checked disabled type="checkbox"> 30.<strong>内蟹</strong></li>
<li>内八字横向绕桩再加压韧</li>
<li>可能 crazy 起步然后蟹步重心，靠一只脚带着，呈坐姿过桩</li>
</ul>
<hr>
<ul>
<li><p><input checked disabled type="checkbox">  31.<strong>双轮蟹</strong></p>
</li>
<li><p>这是我学会的最后一个动作</p>
</li>
</ul>
<hr>
<iframe src="//player.bilibili.com/player.html?aid=46383259&bvid=BV1Fb411p741&cid=81263217&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>



<iframe src="//player.bilibili.com/player.html?aid=247337864&bvid=BV1zv41187cx&cid=315485653&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>  

]]></content>
      <categories>
        <category>爱好</category>
      </categories>
      <tags>
        <tag>轮滑</tag>
        <tag>社团</tag>
      </tags>
  </entry>
  <entry>
    <title>马克思喊我去休息</title>
    <url>/2021/04/25/%E9%A9%AC%E5%85%8B%E6%80%9D%E5%96%8A%E6%88%91%E5%8E%BB%E4%BC%91%E6%81%AF/</url>
    <content><![CDATA[<p><img src="/2021/04/25/%E9%A9%AC%E5%85%8B%E6%80%9D%E5%96%8A%E6%88%91%E5%8E%BB%E4%BC%91%E6%81%AF/1.jpg" alt="1"></p>
<p>放松不要等到等周末，周末也不要放纵，</p>
<p>当前阶段 <strong>主要矛盾</strong> 是学习与娱乐的矛盾，（还有度的感念）</p>
<p>一周有七天，六七是周末，为什么会有周末？</p>
<p>我想，周末的存在就是让人有间歇性的休息，换言之，周末是一个充电的时间。</p>
<p>当然，对于周末的利用，每个人都是不同的，如果你选择将所有的时间集中起来分配，集中去玩，集中去学习了，感觉是很爽的，</p>
<p>但是也会有逆反很疲劳的那一刻，或早或晚，因人而异，学习的疲劳，他会不断的累加，对我来说是消除疲劳似乎并不容易。我常常会处于一个比较稳定的轻度疲劳状态下，很难走出。</p>
<p>如果你选择一整天 or 总之就是很长的一段时间，去学习，或者是去玩的话，要么你收不回来心，而且还感觉很累；要么就是我之前说的那种，一直都迷迷糊糊，眼睛无神，那种很糟糕的状态中，一直出不来，</p>
<p>但如果你上今天上午你运动了，休息了，你要是发自内心的告诉自己，你真的感觉到放松了(//∇//)【注意，不是去解决没做完的事情，这叫减轻精神负担，不能称作放松】，下午再去学习的时候可能会有点遗忘，这个没关系，说明你开始注意到了什么，你的的注意力慢慢恢复，更加集中了，然后你就会发现那些低级错误，现在做的还是一如既往的慢，但最起码所以才相比效率高多了。</p>
<p>周六上午休息的罪恶感，也基本没了，</p>
<p>早上、上午、下午、晚上学习，中午、傍晚、夜里休息，</p>
<p>之前的眼疲劳的问题也明显改善了。</p>
<p>以此告诫自己适 <strong>度</strong> 用眼。</p>
<p>关于 <strong>度</strong> 的事情想再多说一点，大家都会放松，做一个有趣的比喻，</p>
<p>短期合适的放松（清空内存重启后的电脑），长期放松（硬盘格式化），</p>
<p>不断学习的真谛不太懂（高中、大学都这么说，但都在强调这一点），以前只理解表面意思，盲目性不间断、长时间去做一件事（高CPU的电脑），好多时间都被低效浪费。</p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>杂记</tag>
      </tags>
  </entry>
</search>
